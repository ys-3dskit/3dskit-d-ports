// we dont need compat
/+
/**
 * \file compat-1.3.h
 *
 * \brief Compatibility definitions for using Mbed TLS with client code written
 *  for the PolarSSL naming conventions.
 *
 * \deprecated Use the new names directly instead
 */

extern (C) @nogc nothrow:

/*
 *  Copyright The Mbed TLS Contributors
 *  SPDX-License-Identifier: Apache-2.0 OR GPL-2.0-or-later
 */

/*
 * config.h options
 */
enum POLARSSL_AESNI_C = MBEDTLS_AESNI_C;

enum POLARSSL_AES_C = MBEDTLS_AES_C;

enum POLARSSL_ARC4_C = MBEDTLS_ARC4_C;

enum POLARSSL_ASN1_PARSE_C = MBEDTLS_ASN1_PARSE_C;

enum POLARSSL_ASN1_WRITE_C = MBEDTLS_ASN1_WRITE_C;

enum POLARSSL_BASE64_C = MBEDTLS_BASE64_C;

enum POLARSSL_BIGNUM_C = MBEDTLS_BIGNUM_C;

enum POLARSSL_BLOWFISH_C = MBEDTLS_BLOWFISH_C;

enum POLARSSL_CAMELLIA_C = MBEDTLS_CAMELLIA_C;

enum POLARSSL_CCM_C = MBEDTLS_CCM_C;

enum POLARSSL_CERTS_C = MBEDTLS_CERTS_C;

enum POLARSSL_CIPHER_C = MBEDTLS_CIPHER_C;

enum POLARSSL_CIPHER_MODE_CBC = MBEDTLS_CIPHER_MODE_CBC;

enum POLARSSL_CIPHER_MODE_CFB = MBEDTLS_CIPHER_MODE_CFB;

enum POLARSSL_CIPHER_MODE_CTR = MBEDTLS_CIPHER_MODE_CTR;

enum POLARSSL_CIPHER_PADDING_ONE_AND_ZEROS = MBEDTLS_CIPHER_PADDING_ONE_AND_ZEROS;

enum POLARSSL_CIPHER_PADDING_PKCS7 = MBEDTLS_CIPHER_PADDING_PKCS7;

enum POLARSSL_CIPHER_PADDING_ZEROS = MBEDTLS_CIPHER_PADDING_ZEROS;

enum POLARSSL_CIPHER_PADDING_ZEROS_AND_LEN = MBEDTLS_CIPHER_PADDING_ZEROS_AND_LEN;

enum POLARSSL_CTR_DRBG_C = MBEDTLS_CTR_DRBG_C;

enum POLARSSL_DEBUG_C = MBEDTLS_DEBUG_C;

enum POLARSSL_DES_C = MBEDTLS_DES_C;

enum POLARSSL_DHM_C = MBEDTLS_DHM_C;

enum POLARSSL_ECDH_C = MBEDTLS_ECDH_C;

enum POLARSSL_ECDSA_C = MBEDTLS_ECDSA_C;

enum POLARSSL_ECDSA_DETERMINISTIC = MBEDTLS_ECDSA_DETERMINISTIC;

enum POLARSSL_ECP_C = MBEDTLS_ECP_C;

enum POLARSSL_ECP_DP_BP256R1_ENABLED = MBEDTLS_ECP_DP_BP256R1_ENABLED;

enum POLARSSL_ECP_DP_BP384R1_ENABLED = MBEDTLS_ECP_DP_BP384R1_ENABLED;

enum POLARSSL_ECP_DP_BP512R1_ENABLED = MBEDTLS_ECP_DP_BP512R1_ENABLED;

enum POLARSSL_ECP_DP_M255_ENABLED = MBEDTLS_ECP_DP_CURVE25519_ENABLED;

enum POLARSSL_ECP_DP_SECP192K1_ENABLED = MBEDTLS_ECP_DP_SECP192K1_ENABLED;

enum POLARSSL_ECP_DP_SECP192R1_ENABLED = MBEDTLS_ECP_DP_SECP192R1_ENABLED;

enum POLARSSL_ECP_DP_SECP224K1_ENABLED = MBEDTLS_ECP_DP_SECP224K1_ENABLED;

enum POLARSSL_ECP_DP_SECP224R1_ENABLED = MBEDTLS_ECP_DP_SECP224R1_ENABLED;

enum POLARSSL_ECP_DP_SECP256K1_ENABLED = MBEDTLS_ECP_DP_SECP256K1_ENABLED;

enum POLARSSL_ECP_DP_SECP256R1_ENABLED = MBEDTLS_ECP_DP_SECP256R1_ENABLED;

enum POLARSSL_ECP_DP_SECP384R1_ENABLED = MBEDTLS_ECP_DP_SECP384R1_ENABLED;

enum POLARSSL_ECP_DP_SECP521R1_ENABLED = MBEDTLS_ECP_DP_SECP521R1_ENABLED;

enum POLARSSL_ECP_NIST_OPTIM = MBEDTLS_ECP_NIST_OPTIM;

enum POLARSSL_ENTROPY_C = MBEDTLS_ENTROPY_C;

enum POLARSSL_ERROR_C = MBEDTLS_ERROR_C;

enum POLARSSL_ERROR_STRERROR_DUMMY = MBEDTLS_ERROR_STRERROR_DUMMY;

enum POLARSSL_FS_IO = MBEDTLS_FS_IO;

enum POLARSSL_GCM_C = MBEDTLS_GCM_C;

enum POLARSSL_GENPRIME = MBEDTLS_GENPRIME;

enum POLARSSL_HAVE_ASM = MBEDTLS_HAVE_ASM;

enum POLARSSL_HAVE_TIME = MBEDTLS_HAVE_TIME;

enum POLARSSL_HMAC_DRBG_C = MBEDTLS_HMAC_DRBG_C;

enum POLARSSL_KEY_EXCHANGE_DHE_PSK_ENABLED = MBEDTLS_KEY_EXCHANGE_DHE_PSK_ENABLED;

enum POLARSSL_KEY_EXCHANGE_DHE_RSA_ENABLED = MBEDTLS_KEY_EXCHANGE_DHE_RSA_ENABLED;

enum POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED = MBEDTLS_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED;

enum POLARSSL_KEY_EXCHANGE_ECDHE_PSK_ENABLED = MBEDTLS_KEY_EXCHANGE_ECDHE_PSK_ENABLED;

enum POLARSSL_KEY_EXCHANGE_ECDHE_RSA_ENABLED = MBEDTLS_KEY_EXCHANGE_ECDHE_RSA_ENABLED;

enum POLARSSL_KEY_EXCHANGE_ECDH_ECDSA_ENABLED = MBEDTLS_KEY_EXCHANGE_ECDH_ECDSA_ENABLED;

enum POLARSSL_KEY_EXCHANGE_ECDH_RSA_ENABLED = MBEDTLS_KEY_EXCHANGE_ECDH_RSA_ENABLED;

enum POLARSSL_KEY_EXCHANGE_PSK_ENABLED = MBEDTLS_KEY_EXCHANGE_PSK_ENABLED;

enum POLARSSL_KEY_EXCHANGE_RSA_ENABLED = MBEDTLS_KEY_EXCHANGE_RSA_ENABLED;

enum POLARSSL_KEY_EXCHANGE_RSA_PSK_ENABLED = MBEDTLS_KEY_EXCHANGE_RSA_PSK_ENABLED;

enum POLARSSL_MD5_C = MBEDTLS_MD5_C;

enum POLARSSL_MD_C = MBEDTLS_MD_C;

enum POLARSSL_NET_C = MBEDTLS_NET_C;

enum POLARSSL_NO_PLATFORM_ENTROPY = MBEDTLS_NO_PLATFORM_ENTROPY;

enum POLARSSL_OID_C = MBEDTLS_OID_C;

enum POLARSSL_PADLOCK_C = MBEDTLS_PADLOCK_C;

enum POLARSSL_PEM_PARSE_C = MBEDTLS_PEM_PARSE_C;

enum POLARSSL_PEM_WRITE_C = MBEDTLS_PEM_WRITE_C;

enum POLARSSL_PKCS12_C = MBEDTLS_PKCS12_C;

enum POLARSSL_PKCS1_V15 = MBEDTLS_PKCS1_V15;

enum POLARSSL_PKCS1_V21 = MBEDTLS_PKCS1_V21;

enum POLARSSL_PKCS5_C = MBEDTLS_PKCS5_C;

enum POLARSSL_PK_C = MBEDTLS_PK_C;

enum POLARSSL_PK_PARSE_C = MBEDTLS_PK_PARSE_C;

enum POLARSSL_PK_PARSE_EC_EXTENDED = MBEDTLS_PK_PARSE_EC_EXTENDED;

enum POLARSSL_PK_RSA_ALT_SUPPORT = MBEDTLS_PK_RSA_ALT_SUPPORT;

enum POLARSSL_PK_WRITE_C = MBEDTLS_PK_WRITE_C;

enum POLARSSL_PLATFORM_C = MBEDTLS_PLATFORM_C;

enum POLARSSL_REMOVE_ARC4_CIPHERSUITES = MBEDTLS_REMOVE_ARC4_CIPHERSUITES;

enum POLARSSL_RIPEMD160_C = MBEDTLS_RIPEMD160_C;

enum POLARSSL_RSA_C = MBEDTLS_RSA_C;

enum POLARSSL_SHA1_C = MBEDTLS_SHA1_C;

enum POLARSSL_SHA256_C = MBEDTLS_SHA256_C;

enum POLARSSL_SHA512_C = MBEDTLS_SHA512_C;

enum POLARSSL_SSL_ALL_ALERT_MESSAGES = MBEDTLS_SSL_ALL_ALERT_MESSAGES;

enum POLARSSL_SSL_ALPN = MBEDTLS_SSL_ALPN;

enum POLARSSL_SSL_CACHE_C = MBEDTLS_SSL_CACHE_C;

enum POLARSSL_SSL_CBC_RECORD_SPLITTING = MBEDTLS_SSL_CBC_RECORD_SPLITTING;

enum POLARSSL_SSL_CLI_C = MBEDTLS_SSL_CLI_C;

enum POLARSSL_SSL_COOKIE_C = MBEDTLS_SSL_COOKIE_C;

enum POLARSSL_SSL_DTLS_ANTI_REPLAY = MBEDTLS_SSL_DTLS_ANTI_REPLAY;

enum POLARSSL_SSL_DTLS_BADMAC_LIMIT = MBEDTLS_SSL_DTLS_BADMAC_LIMIT;

enum POLARSSL_SSL_DTLS_HELLO_VERIFY = MBEDTLS_SSL_DTLS_HELLO_VERIFY;

enum POLARSSL_SSL_ENCRYPT_THEN_MAC = MBEDTLS_SSL_ENCRYPT_THEN_MAC;

enum POLARSSL_SSL_EXTENDED_MASTER_SECRET = MBEDTLS_SSL_EXTENDED_MASTER_SECRET;

enum POLARSSL_SSL_FALLBACK_SCSV = MBEDTLS_SSL_FALLBACK_SCSV;

enum POLARSSL_SSL_MAX_FRAGMENT_LENGTH = MBEDTLS_SSL_MAX_FRAGMENT_LENGTH;

enum POLARSSL_SSL_PROTO_DTLS = MBEDTLS_SSL_PROTO_DTLS;

enum POLARSSL_SSL_PROTO_TLS1 = MBEDTLS_SSL_PROTO_TLS1;

enum POLARSSL_SSL_PROTO_TLS1_1 = MBEDTLS_SSL_PROTO_TLS1_1;

enum POLARSSL_SSL_PROTO_TLS1_2 = MBEDTLS_SSL_PROTO_TLS1_2;

enum POLARSSL_SSL_RENEGOTIATION = MBEDTLS_SSL_RENEGOTIATION;

enum POLARSSL_SSL_SERVER_NAME_INDICATION = MBEDTLS_SSL_SERVER_NAME_INDICATION;

enum POLARSSL_SSL_SESSION_TICKETS = MBEDTLS_SSL_SESSION_TICKETS;

enum POLARSSL_SSL_SRV_C = MBEDTLS_SSL_SRV_C;

enum POLARSSL_SSL_TLS_C = MBEDTLS_SSL_TLS_C;

enum POLARSSL_SSL_TRUNCATED_HMAC = MBEDTLS_SSL_TRUNCATED_HMAC;

enum POLARSSL_VERSION_C = MBEDTLS_VERSION_C;

enum POLARSSL_VERSION_FEATURES = MBEDTLS_VERSION_FEATURES;

enum POLARSSL_X509_CHECK_EXTENDED_KEY_USAGE = MBEDTLS_X509_CHECK_EXTENDED_KEY_USAGE;

enum POLARSSL_X509_CHECK_KEY_USAGE = MBEDTLS_X509_CHECK_KEY_USAGE;

enum POLARSSL_X509_CREATE_C = MBEDTLS_X509_CREATE_C;

enum POLARSSL_X509_CRL_PARSE_C = MBEDTLS_X509_CRL_PARSE_C;

enum POLARSSL_X509_CRT_PARSE_C = MBEDTLS_X509_CRT_PARSE_C;

enum POLARSSL_X509_CRT_WRITE_C = MBEDTLS_X509_CRT_WRITE_C;

enum POLARSSL_X509_CSR_PARSE_C = MBEDTLS_X509_CSR_PARSE_C;

enum POLARSSL_X509_CSR_WRITE_C = MBEDTLS_X509_CSR_WRITE_C;

enum POLARSSL_X509_RSASSA_PSS_SUPPORT = MBEDTLS_X509_RSASSA_PSS_SUPPORT;

enum POLARSSL_X509_USE_C = MBEDTLS_X509_USE_C;

enum POLARSSL_XTEA_C = MBEDTLS_XTEA_C;

/*
 * Misc names (macros, types, functions, enum constants...)
 */
enum AES_DECRYPT = MBEDTLS_AES_DECRYPT;
enum AES_ENCRYPT = MBEDTLS_AES_ENCRYPT;
enum ASN1_BIT_STRING = MBEDTLS_ASN1_BIT_STRING;
enum ASN1_BMP_STRING = MBEDTLS_ASN1_BMP_STRING;
enum ASN1_BOOLEAN = MBEDTLS_ASN1_BOOLEAN;
enum ASN1_CHK_ADD = MBEDTLS_ASN1_CHK_ADD;
enum ASN1_CONSTRUCTED = MBEDTLS_ASN1_CONSTRUCTED;
enum ASN1_CONTEXT_SPECIFIC = MBEDTLS_ASN1_CONTEXT_SPECIFIC;
enum ASN1_GENERALIZED_TIME = MBEDTLS_ASN1_GENERALIZED_TIME;
enum ASN1_IA5_STRING = MBEDTLS_ASN1_IA5_STRING;
enum ASN1_INTEGER = MBEDTLS_ASN1_INTEGER;
enum ASN1_NULL = MBEDTLS_ASN1_NULL;
enum ASN1_OCTET_STRING = MBEDTLS_ASN1_OCTET_STRING;
enum ASN1_OID = MBEDTLS_ASN1_OID;
enum ASN1_PRIMITIVE = MBEDTLS_ASN1_PRIMITIVE;
enum ASN1_PRINTABLE_STRING = MBEDTLS_ASN1_PRINTABLE_STRING;
enum ASN1_SEQUENCE = MBEDTLS_ASN1_SEQUENCE;
enum ASN1_SET = MBEDTLS_ASN1_SET;
enum ASN1_T61_STRING = MBEDTLS_ASN1_T61_STRING;
enum ASN1_UNIVERSAL_STRING = MBEDTLS_ASN1_UNIVERSAL_STRING;
enum ASN1_UTC_TIME = MBEDTLS_ASN1_UTC_TIME;
enum ASN1_UTF8_STRING = MBEDTLS_ASN1_UTF8_STRING;
enum BADCERT_CN_MISMATCH = MBEDTLS_X509_BADCERT_CN_MISMATCH;
enum BADCERT_EXPIRED = MBEDTLS_X509_BADCERT_EXPIRED;
enum BADCERT_FUTURE = MBEDTLS_X509_BADCERT_FUTURE;
enum BADCERT_MISSING = MBEDTLS_X509_BADCERT_MISSING;
enum BADCERT_NOT_TRUSTED = MBEDTLS_X509_BADCERT_NOT_TRUSTED;
enum BADCERT_OTHER = MBEDTLS_X509_BADCERT_OTHER;
enum BADCERT_REVOKED = MBEDTLS_X509_BADCERT_REVOKED;
enum BADCERT_SKIP_VERIFY = MBEDTLS_X509_BADCERT_SKIP_VERIFY;
enum BADCRL_EXPIRED = MBEDTLS_X509_BADCRL_EXPIRED;
enum BADCRL_FUTURE = MBEDTLS_X509_BADCRL_FUTURE;
enum BADCRL_NOT_TRUSTED = MBEDTLS_X509_BADCRL_NOT_TRUSTED;
enum BLOWFISH_BLOCKSIZE = MBEDTLS_BLOWFISH_BLOCKSIZE;
enum BLOWFISH_DECRYPT = MBEDTLS_BLOWFISH_DECRYPT;
enum BLOWFISH_ENCRYPT = MBEDTLS_BLOWFISH_ENCRYPT;
enum BLOWFISH_MAX_KEY = MBEDTLS_BLOWFISH_MAX_KEY_BITS;
enum BLOWFISH_MIN_KEY = MBEDTLS_BLOWFISH_MIN_KEY_BITS;
enum BLOWFISH_ROUNDS = MBEDTLS_BLOWFISH_ROUNDS;
enum CAMELLIA_DECRYPT = MBEDTLS_CAMELLIA_DECRYPT;
enum CAMELLIA_ENCRYPT = MBEDTLS_CAMELLIA_ENCRYPT;
enum COLLECT_SIZE = MBEDTLS_HAVEGE_COLLECT_SIZE;
enum CTR_DRBG_BLOCKSIZE = MBEDTLS_CTR_DRBG_BLOCKSIZE;
enum CTR_DRBG_ENTROPY_LEN = MBEDTLS_CTR_DRBG_ENTROPY_LEN;
enum CTR_DRBG_KEYBITS = MBEDTLS_CTR_DRBG_KEYBITS;
enum CTR_DRBG_KEYSIZE = MBEDTLS_CTR_DRBG_KEYSIZE;
enum CTR_DRBG_MAX_INPUT = MBEDTLS_CTR_DRBG_MAX_INPUT;
enum CTR_DRBG_MAX_REQUEST = MBEDTLS_CTR_DRBG_MAX_REQUEST;
enum CTR_DRBG_MAX_SEED_INPUT = MBEDTLS_CTR_DRBG_MAX_SEED_INPUT;
enum CTR_DRBG_PR_OFF = MBEDTLS_CTR_DRBG_PR_OFF;
enum CTR_DRBG_PR_ON = MBEDTLS_CTR_DRBG_PR_ON;
enum CTR_DRBG_RESEED_INTERVAL = MBEDTLS_CTR_DRBG_RESEED_INTERVAL;
enum CTR_DRBG_SEEDLEN = MBEDTLS_CTR_DRBG_SEEDLEN;
enum DEPRECATED = MBEDTLS_DEPRECATED;
enum DES_DECRYPT = MBEDTLS_DES_DECRYPT;
enum DES_ENCRYPT = MBEDTLS_DES_ENCRYPT;
enum DES_KEY_SIZE = MBEDTLS_DES_KEY_SIZE;
enum ENTROPY_BLOCK_SIZE = MBEDTLS_ENTROPY_BLOCK_SIZE;
enum ENTROPY_MAX_GATHER = MBEDTLS_ENTROPY_MAX_GATHER;
enum ENTROPY_MAX_SEED_SIZE = MBEDTLS_ENTROPY_MAX_SEED_SIZE;
enum ENTROPY_MAX_SOURCES = MBEDTLS_ENTROPY_MAX_SOURCES;
enum ENTROPY_MIN_HARDCLOCK = MBEDTLS_ENTROPY_MIN_HARDCLOCK;
enum ENTROPY_MIN_HAVEGE = MBEDTLS_ENTROPY_MIN_HAVEGE;
enum ENTROPY_MIN_PLATFORM = MBEDTLS_ENTROPY_MIN_PLATFORM;
enum ENTROPY_SOURCE_MANUAL = MBEDTLS_ENTROPY_SOURCE_MANUAL;
enum EXT_AUTHORITY_KEY_IDENTIFIER = MBEDTLS_X509_EXT_AUTHORITY_KEY_IDENTIFIER;
enum EXT_BASIC_CONSTRAINTS = MBEDTLS_X509_EXT_BASIC_CONSTRAINTS;
enum EXT_CERTIFICATE_POLICIES = MBEDTLS_X509_EXT_CERTIFICATE_POLICIES;
enum EXT_CRL_DISTRIBUTION_POINTS = MBEDTLS_X509_EXT_CRL_DISTRIBUTION_POINTS;
enum EXT_EXTENDED_KEY_USAGE = MBEDTLS_X509_EXT_EXTENDED_KEY_USAGE;
enum EXT_FRESHEST_CRL = MBEDTLS_X509_EXT_FRESHEST_CRL;
enum EXT_INIHIBIT_ANYPOLICY = MBEDTLS_X509_EXT_INIHIBIT_ANYPOLICY;
enum EXT_ISSUER_ALT_NAME = MBEDTLS_X509_EXT_ISSUER_ALT_NAME;
enum EXT_KEY_USAGE = MBEDTLS_X509_EXT_KEY_USAGE;
enum EXT_NAME_CONSTRAINTS = MBEDTLS_X509_EXT_NAME_CONSTRAINTS;
enum EXT_NS_CERT_TYPE = MBEDTLS_X509_EXT_NS_CERT_TYPE;
enum EXT_POLICY_CONSTRAINTS = MBEDTLS_X509_EXT_POLICY_CONSTRAINTS;
enum EXT_POLICY_MAPPINGS = MBEDTLS_X509_EXT_POLICY_MAPPINGS;
enum EXT_SUBJECT_ALT_NAME = MBEDTLS_X509_EXT_SUBJECT_ALT_NAME;
enum EXT_SUBJECT_DIRECTORY_ATTRS = MBEDTLS_X509_EXT_SUBJECT_DIRECTORY_ATTRS;
enum EXT_SUBJECT_KEY_IDENTIFIER = MBEDTLS_X509_EXT_SUBJECT_KEY_IDENTIFIER;
enum GCM_DECRYPT = MBEDTLS_GCM_DECRYPT;
enum GCM_ENCRYPT = MBEDTLS_GCM_ENCRYPT;
enum KU_CRL_SIGN = MBEDTLS_X509_KU_CRL_SIGN;
enum KU_DATA_ENCIPHERMENT = MBEDTLS_X509_KU_DATA_ENCIPHERMENT;
enum KU_DIGITAL_SIGNATURE = MBEDTLS_X509_KU_DIGITAL_SIGNATURE;
enum KU_KEY_AGREEMENT = MBEDTLS_X509_KU_KEY_AGREEMENT;
enum KU_KEY_CERT_SIGN = MBEDTLS_X509_KU_KEY_CERT_SIGN;
enum KU_KEY_ENCIPHERMENT = MBEDTLS_X509_KU_KEY_ENCIPHERMENT;
enum KU_NON_REPUDIATION = MBEDTLS_X509_KU_NON_REPUDIATION;
enum LN_2_DIV_LN_10_SCALE100 = MBEDTLS_LN_2_DIV_LN_10_SCALE100;
enum MEMORY_VERIFY_ALLOC = MBEDTLS_MEMORY_VERIFY_ALLOC;
enum MEMORY_VERIFY_ALWAYS = MBEDTLS_MEMORY_VERIFY_ALWAYS;
enum MEMORY_VERIFY_FREE = MBEDTLS_MEMORY_VERIFY_FREE;
enum MEMORY_VERIFY_NONE = MBEDTLS_MEMORY_VERIFY_NONE;
enum MPI_CHK = MBEDTLS_MPI_CHK;
enum NET_PROTO_TCP = MBEDTLS_NET_PROTO_TCP;
enum NET_PROTO_UDP = MBEDTLS_NET_PROTO_UDP;
enum NS_CERT_TYPE_EMAIL = MBEDTLS_X509_NS_CERT_TYPE_EMAIL;
enum NS_CERT_TYPE_EMAIL_CA = MBEDTLS_X509_NS_CERT_TYPE_EMAIL_CA;
enum NS_CERT_TYPE_OBJECT_SIGNING = MBEDTLS_X509_NS_CERT_TYPE_OBJECT_SIGNING;
enum NS_CERT_TYPE_OBJECT_SIGNING_CA = MBEDTLS_X509_NS_CERT_TYPE_OBJECT_SIGNING_CA;
enum NS_CERT_TYPE_RESERVED = MBEDTLS_X509_NS_CERT_TYPE_RESERVED;
enum NS_CERT_TYPE_SSL_CA = MBEDTLS_X509_NS_CERT_TYPE_SSL_CA;
enum NS_CERT_TYPE_SSL_CLIENT = MBEDTLS_X509_NS_CERT_TYPE_SSL_CLIENT;
enum NS_CERT_TYPE_SSL_SERVER = MBEDTLS_X509_NS_CERT_TYPE_SSL_SERVER;
enum OID_ANSI_X9_62 = MBEDTLS_OID_ANSI_X9_62;
enum OID_ANSI_X9_62_FIELD_TYPE = MBEDTLS_OID_ANSI_X9_62_FIELD_TYPE;
enum OID_ANSI_X9_62_PRIME_FIELD = MBEDTLS_OID_ANSI_X9_62_PRIME_FIELD;
enum OID_ANSI_X9_62_SIG = MBEDTLS_OID_ANSI_X9_62_SIG;
enum OID_ANSI_X9_62_SIG_SHA2 = MBEDTLS_OID_ANSI_X9_62_SIG_SHA2;
enum OID_ANY_EXTENDED_KEY_USAGE = MBEDTLS_OID_ANY_EXTENDED_KEY_USAGE;
enum OID_AT = MBEDTLS_OID_AT;
enum OID_AT_CN = MBEDTLS_OID_AT_CN;
enum OID_AT_COUNTRY = MBEDTLS_OID_AT_COUNTRY;
enum OID_AT_DN_QUALIFIER = MBEDTLS_OID_AT_DN_QUALIFIER;
enum OID_AT_GENERATION_QUALIFIER = MBEDTLS_OID_AT_GENERATION_QUALIFIER;
enum OID_AT_GIVEN_NAME = MBEDTLS_OID_AT_GIVEN_NAME;
enum OID_AT_INITIALS = MBEDTLS_OID_AT_INITIALS;
enum OID_AT_LOCALITY = MBEDTLS_OID_AT_LOCALITY;
enum OID_AT_ORGANIZATION = MBEDTLS_OID_AT_ORGANIZATION;
enum OID_AT_ORG_UNIT = MBEDTLS_OID_AT_ORG_UNIT;
enum OID_AT_POSTAL_ADDRESS = MBEDTLS_OID_AT_POSTAL_ADDRESS;
enum OID_AT_POSTAL_CODE = MBEDTLS_OID_AT_POSTAL_CODE;
enum OID_AT_PSEUDONYM = MBEDTLS_OID_AT_PSEUDONYM;
enum OID_AT_SERIAL_NUMBER = MBEDTLS_OID_AT_SERIAL_NUMBER;
enum OID_AT_STATE = MBEDTLS_OID_AT_STATE;
enum OID_AT_SUR_NAME = MBEDTLS_OID_AT_SUR_NAME;
enum OID_AT_TITLE = MBEDTLS_OID_AT_TITLE;
enum OID_AT_UNIQUE_IDENTIFIER = MBEDTLS_OID_AT_UNIQUE_IDENTIFIER;
enum OID_AUTHORITY_KEY_IDENTIFIER = MBEDTLS_OID_AUTHORITY_KEY_IDENTIFIER;
enum OID_BASIC_CONSTRAINTS = MBEDTLS_OID_BASIC_CONSTRAINTS;
enum OID_CERTICOM = MBEDTLS_OID_CERTICOM;
enum OID_CERTIFICATE_POLICIES = MBEDTLS_OID_CERTIFICATE_POLICIES;
enum OID_CLIENT_AUTH = MBEDTLS_OID_CLIENT_AUTH;
enum OID_CMP = MBEDTLS_OID_CMP;
enum OID_CODE_SIGNING = MBEDTLS_OID_CODE_SIGNING;
enum OID_COUNTRY_US = MBEDTLS_OID_COUNTRY_US;
enum OID_CRL_DISTRIBUTION_POINTS = MBEDTLS_OID_CRL_DISTRIBUTION_POINTS;
enum OID_CRL_NUMBER = MBEDTLS_OID_CRL_NUMBER;
enum OID_DES_CBC = MBEDTLS_OID_DES_CBC;
enum OID_DES_EDE3_CBC = MBEDTLS_OID_DES_EDE3_CBC;
enum OID_DIGEST_ALG_MD2 = MBEDTLS_OID_DIGEST_ALG_MD2;
enum OID_DIGEST_ALG_MD4 = MBEDTLS_OID_DIGEST_ALG_MD4;
enum OID_DIGEST_ALG_MD5 = MBEDTLS_OID_DIGEST_ALG_MD5;
enum OID_DIGEST_ALG_SHA1 = MBEDTLS_OID_DIGEST_ALG_SHA1;
enum OID_DIGEST_ALG_SHA224 = MBEDTLS_OID_DIGEST_ALG_SHA224;
enum OID_DIGEST_ALG_SHA256 = MBEDTLS_OID_DIGEST_ALG_SHA256;
enum OID_DIGEST_ALG_SHA384 = MBEDTLS_OID_DIGEST_ALG_SHA384;
enum OID_DIGEST_ALG_SHA512 = MBEDTLS_OID_DIGEST_ALG_SHA512;
enum OID_DOMAIN_COMPONENT = MBEDTLS_OID_DOMAIN_COMPONENT;
enum OID_ECDSA_SHA1 = MBEDTLS_OID_ECDSA_SHA1;
enum OID_ECDSA_SHA224 = MBEDTLS_OID_ECDSA_SHA224;
enum OID_ECDSA_SHA256 = MBEDTLS_OID_ECDSA_SHA256;
enum OID_ECDSA_SHA384 = MBEDTLS_OID_ECDSA_SHA384;
enum OID_ECDSA_SHA512 = MBEDTLS_OID_ECDSA_SHA512;
enum OID_EC_ALG_ECDH = MBEDTLS_OID_EC_ALG_ECDH;
enum OID_EC_ALG_UNRESTRICTED = MBEDTLS_OID_EC_ALG_UNRESTRICTED;
enum OID_EC_BRAINPOOL_V1 = MBEDTLS_OID_EC_BRAINPOOL_V1;
enum OID_EC_GRP_BP256R1 = MBEDTLS_OID_EC_GRP_BP256R1;
enum OID_EC_GRP_BP384R1 = MBEDTLS_OID_EC_GRP_BP384R1;
enum OID_EC_GRP_BP512R1 = MBEDTLS_OID_EC_GRP_BP512R1;
enum OID_EC_GRP_SECP192K1 = MBEDTLS_OID_EC_GRP_SECP192K1;
enum OID_EC_GRP_SECP192R1 = MBEDTLS_OID_EC_GRP_SECP192R1;
enum OID_EC_GRP_SECP224K1 = MBEDTLS_OID_EC_GRP_SECP224K1;
enum OID_EC_GRP_SECP224R1 = MBEDTLS_OID_EC_GRP_SECP224R1;
enum OID_EC_GRP_SECP256K1 = MBEDTLS_OID_EC_GRP_SECP256K1;
enum OID_EC_GRP_SECP256R1 = MBEDTLS_OID_EC_GRP_SECP256R1;
enum OID_EC_GRP_SECP384R1 = MBEDTLS_OID_EC_GRP_SECP384R1;
enum OID_EC_GRP_SECP521R1 = MBEDTLS_OID_EC_GRP_SECP521R1;
enum OID_EMAIL_PROTECTION = MBEDTLS_OID_EMAIL_PROTECTION;
enum OID_EXTENDED_KEY_USAGE = MBEDTLS_OID_EXTENDED_KEY_USAGE;
enum OID_FRESHEST_CRL = MBEDTLS_OID_FRESHEST_CRL;
enum OID_GOV = MBEDTLS_OID_GOV;
enum OID_HMAC_SHA1 = MBEDTLS_OID_HMAC_SHA1;
enum OID_ID_CE = MBEDTLS_OID_ID_CE;
enum OID_INIHIBIT_ANYPOLICY = MBEDTLS_OID_INIHIBIT_ANYPOLICY;
enum OID_ISO_CCITT_DS = MBEDTLS_OID_ISO_CCITT_DS;
enum OID_ISO_IDENTIFIED_ORG = MBEDTLS_OID_ISO_IDENTIFIED_ORG;
enum OID_ISO_ITU_COUNTRY = MBEDTLS_OID_ISO_ITU_COUNTRY;
enum OID_ISO_ITU_US_ORG = MBEDTLS_OID_ISO_ITU_US_ORG;
enum OID_ISO_MEMBER_BODIES = MBEDTLS_OID_ISO_MEMBER_BODIES;
enum OID_ISSUER_ALT_NAME = MBEDTLS_OID_ISSUER_ALT_NAME;
enum OID_KEY_USAGE = MBEDTLS_OID_KEY_USAGE;
enum OID_KP = MBEDTLS_OID_KP;
enum OID_MGF1 = MBEDTLS_OID_MGF1;
enum OID_NAME_CONSTRAINTS = MBEDTLS_OID_NAME_CONSTRAINTS;
enum OID_NETSCAPE = MBEDTLS_OID_NETSCAPE;
enum OID_NS_BASE_URL = MBEDTLS_OID_NS_BASE_URL;
enum OID_NS_CA_POLICY_URL = MBEDTLS_OID_NS_CA_POLICY_URL;
enum OID_NS_CA_REVOCATION_URL = MBEDTLS_OID_NS_CA_REVOCATION_URL;
enum OID_NS_CERT = MBEDTLS_OID_NS_CERT;
enum OID_NS_CERT_SEQUENCE = MBEDTLS_OID_NS_CERT_SEQUENCE;
enum OID_NS_CERT_TYPE = MBEDTLS_OID_NS_CERT_TYPE;
enum OID_NS_COMMENT = MBEDTLS_OID_NS_COMMENT;
enum OID_NS_DATA_TYPE = MBEDTLS_OID_NS_DATA_TYPE;
enum OID_NS_RENEWAL_URL = MBEDTLS_OID_NS_RENEWAL_URL;
enum OID_NS_REVOCATION_URL = MBEDTLS_OID_NS_REVOCATION_URL;
enum OID_NS_SSL_SERVER_NAME = MBEDTLS_OID_NS_SSL_SERVER_NAME;
enum OID_OCSP_SIGNING = MBEDTLS_OID_OCSP_SIGNING;
enum OID_OIW_SECSIG = MBEDTLS_OID_OIW_SECSIG;
enum OID_OIW_SECSIG_ALG = MBEDTLS_OID_OIW_SECSIG_ALG;
enum OID_OIW_SECSIG_SHA1 = MBEDTLS_OID_OIW_SECSIG_SHA1;
enum OID_ORGANIZATION = MBEDTLS_OID_ORGANIZATION;
enum OID_ORG_ANSI_X9_62 = MBEDTLS_OID_ORG_ANSI_X9_62;
enum OID_ORG_CERTICOM = MBEDTLS_OID_ORG_CERTICOM;
enum OID_ORG_DOD = MBEDTLS_OID_ORG_DOD;
enum OID_ORG_GOV = MBEDTLS_OID_ORG_GOV;
enum OID_ORG_NETSCAPE = MBEDTLS_OID_ORG_NETSCAPE;
enum OID_ORG_OIW = MBEDTLS_OID_ORG_OIW;
enum OID_ORG_RSA_DATA_SECURITY = MBEDTLS_OID_ORG_RSA_DATA_SECURITY;
enum OID_ORG_TELETRUST = MBEDTLS_OID_ORG_TELETRUST;
enum OID_PKCS = MBEDTLS_OID_PKCS;
enum OID_PKCS1 = MBEDTLS_OID_PKCS1;
enum OID_PKCS12 = MBEDTLS_OID_PKCS12;
enum OID_PKCS12_PBE = MBEDTLS_OID_PKCS12_PBE;
enum OID_PKCS12_PBE_SHA1_DES2_EDE_CBC = MBEDTLS_OID_PKCS12_PBE_SHA1_DES2_EDE_CBC;
enum OID_PKCS12_PBE_SHA1_DES3_EDE_CBC = MBEDTLS_OID_PKCS12_PBE_SHA1_DES3_EDE_CBC;
enum OID_PKCS12_PBE_SHA1_RC2_128_CBC = MBEDTLS_OID_PKCS12_PBE_SHA1_RC2_128_CBC;
enum OID_PKCS12_PBE_SHA1_RC2_40_CBC = MBEDTLS_OID_PKCS12_PBE_SHA1_RC2_40_CBC;
enum OID_PKCS12_PBE_SHA1_RC4_128 = MBEDTLS_OID_PKCS12_PBE_SHA1_RC4_128;
enum OID_PKCS12_PBE_SHA1_RC4_40 = MBEDTLS_OID_PKCS12_PBE_SHA1_RC4_40;
enum OID_PKCS1_MD2 = MBEDTLS_OID_PKCS1_MD2;
enum OID_PKCS1_MD4 = MBEDTLS_OID_PKCS1_MD4;
enum OID_PKCS1_MD5 = MBEDTLS_OID_PKCS1_MD5;
enum OID_PKCS1_RSA = MBEDTLS_OID_PKCS1_RSA;
enum OID_PKCS1_SHA1 = MBEDTLS_OID_PKCS1_SHA1;
enum OID_PKCS1_SHA224 = MBEDTLS_OID_PKCS1_SHA224;
enum OID_PKCS1_SHA256 = MBEDTLS_OID_PKCS1_SHA256;
enum OID_PKCS1_SHA384 = MBEDTLS_OID_PKCS1_SHA384;
enum OID_PKCS1_SHA512 = MBEDTLS_OID_PKCS1_SHA512;
enum OID_PKCS5 = MBEDTLS_OID_PKCS5;
enum OID_PKCS5_PBES2 = MBEDTLS_OID_PKCS5_PBES2;
enum OID_PKCS5_PBE_MD2_DES_CBC = MBEDTLS_OID_PKCS5_PBE_MD2_DES_CBC;
enum OID_PKCS5_PBE_MD2_RC2_CBC = MBEDTLS_OID_PKCS5_PBE_MD2_RC2_CBC;
enum OID_PKCS5_PBE_MD5_DES_CBC = MBEDTLS_OID_PKCS5_PBE_MD5_DES_CBC;
enum OID_PKCS5_PBE_MD5_RC2_CBC = MBEDTLS_OID_PKCS5_PBE_MD5_RC2_CBC;
enum OID_PKCS5_PBE_SHA1_DES_CBC = MBEDTLS_OID_PKCS5_PBE_SHA1_DES_CBC;
enum OID_PKCS5_PBE_SHA1_RC2_CBC = MBEDTLS_OID_PKCS5_PBE_SHA1_RC2_CBC;
enum OID_PKCS5_PBKDF2 = MBEDTLS_OID_PKCS5_PBKDF2;
enum OID_PKCS5_PBMAC1 = MBEDTLS_OID_PKCS5_PBMAC1;
enum OID_PKCS9 = MBEDTLS_OID_PKCS9;
enum OID_PKCS9_CSR_EXT_REQ = MBEDTLS_OID_PKCS9_CSR_EXT_REQ;
enum OID_PKCS9_EMAIL = MBEDTLS_OID_PKCS9_EMAIL;
enum OID_PKIX = MBEDTLS_OID_PKIX;
enum OID_POLICY_CONSTRAINTS = MBEDTLS_OID_POLICY_CONSTRAINTS;
enum OID_POLICY_MAPPINGS = MBEDTLS_OID_POLICY_MAPPINGS;
enum OID_PRIVATE_KEY_USAGE_PERIOD = MBEDTLS_OID_PRIVATE_KEY_USAGE_PERIOD;
enum OID_RSASSA_PSS = MBEDTLS_OID_RSASSA_PSS;
enum OID_RSA_COMPANY = MBEDTLS_OID_RSA_COMPANY;
enum OID_RSA_SHA_OBS = MBEDTLS_OID_RSA_SHA_OBS;
enum OID_SERVER_AUTH = MBEDTLS_OID_SERVER_AUTH;
enum OID_SIZE = MBEDTLS_OID_SIZE;
enum OID_SUBJECT_ALT_NAME = MBEDTLS_OID_SUBJECT_ALT_NAME;
enum OID_SUBJECT_DIRECTORY_ATTRS = MBEDTLS_OID_SUBJECT_DIRECTORY_ATTRS;
enum OID_SUBJECT_KEY_IDENTIFIER = MBEDTLS_OID_SUBJECT_KEY_IDENTIFIER;
enum OID_TELETRUST = MBEDTLS_OID_TELETRUST;
enum OID_TIME_STAMPING = MBEDTLS_OID_TIME_STAMPING;
enum PADLOCK_ACE = MBEDTLS_PADLOCK_ACE;
enum PADLOCK_ALIGN16 = MBEDTLS_PADLOCK_ALIGN16;
enum PADLOCK_PHE = MBEDTLS_PADLOCK_PHE;
enum PADLOCK_PMM = MBEDTLS_PADLOCK_PMM;
enum PADLOCK_RNG = MBEDTLS_PADLOCK_RNG;
enum PKCS12_DERIVE_IV = MBEDTLS_PKCS12_DERIVE_IV;
enum PKCS12_DERIVE_KEY = MBEDTLS_PKCS12_DERIVE_KEY;
enum PKCS12_DERIVE_MAC_KEY = MBEDTLS_PKCS12_DERIVE_MAC_KEY;
enum PKCS12_PBE_DECRYPT = MBEDTLS_PKCS12_PBE_DECRYPT;
enum PKCS12_PBE_ENCRYPT = MBEDTLS_PKCS12_PBE_ENCRYPT;
enum PKCS5_DECRYPT = MBEDTLS_PKCS5_DECRYPT;
enum PKCS5_ENCRYPT = MBEDTLS_PKCS5_ENCRYPT;
enum POLARSSL_AESNI_AES = MBEDTLS_AESNI_AES;
enum POLARSSL_AESNI_CLMUL = MBEDTLS_AESNI_CLMUL;
enum POLARSSL_AESNI_H = MBEDTLS_AESNI_H;
enum POLARSSL_AES_H = MBEDTLS_AES_H;
enum POLARSSL_ARC4_H = MBEDTLS_ARC4_H;
enum POLARSSL_ASN1_H = MBEDTLS_ASN1_H;
enum POLARSSL_ASN1_WRITE_H = MBEDTLS_ASN1_WRITE_H;
enum POLARSSL_BASE64_H = MBEDTLS_BASE64_H;
enum POLARSSL_BIGNUM_H = MBEDTLS_BIGNUM_H;
enum POLARSSL_BLOWFISH_H = MBEDTLS_BLOWFISH_H;
enum POLARSSL_BN_MUL_H = MBEDTLS_BN_MUL_H;
enum POLARSSL_CAMELLIA_H = MBEDTLS_CAMELLIA_H;
enum POLARSSL_CCM_H = MBEDTLS_CCM_H;
enum POLARSSL_CERTS_H = MBEDTLS_CERTS_H;
enum POLARSSL_CHECK_CONFIG_H = MBEDTLS_CHECK_CONFIG_H;
enum POLARSSL_CIPHERSUITE_NODTLS = MBEDTLS_CIPHERSUITE_NODTLS;
enum POLARSSL_CIPHERSUITE_SHORT_TAG = MBEDTLS_CIPHERSUITE_SHORT_TAG;
enum POLARSSL_CIPHERSUITE_WEAK = MBEDTLS_CIPHERSUITE_WEAK;
enum POLARSSL_CIPHER_AES_128_CBC = MBEDTLS_CIPHER_AES_128_CBC;
enum POLARSSL_CIPHER_AES_128_CCM = MBEDTLS_CIPHER_AES_128_CCM;
enum POLARSSL_CIPHER_AES_128_CFB128 = MBEDTLS_CIPHER_AES_128_CFB128;
enum POLARSSL_CIPHER_AES_128_CTR = MBEDTLS_CIPHER_AES_128_CTR;
enum POLARSSL_CIPHER_AES_128_ECB = MBEDTLS_CIPHER_AES_128_ECB;
enum POLARSSL_CIPHER_AES_128_GCM = MBEDTLS_CIPHER_AES_128_GCM;
enum POLARSSL_CIPHER_AES_192_CBC = MBEDTLS_CIPHER_AES_192_CBC;
enum POLARSSL_CIPHER_AES_192_CCM = MBEDTLS_CIPHER_AES_192_CCM;
enum POLARSSL_CIPHER_AES_192_CFB128 = MBEDTLS_CIPHER_AES_192_CFB128;
enum POLARSSL_CIPHER_AES_192_CTR = MBEDTLS_CIPHER_AES_192_CTR;
enum POLARSSL_CIPHER_AES_192_ECB = MBEDTLS_CIPHER_AES_192_ECB;
enum POLARSSL_CIPHER_AES_192_GCM = MBEDTLS_CIPHER_AES_192_GCM;
enum POLARSSL_CIPHER_AES_256_CBC = MBEDTLS_CIPHER_AES_256_CBC;
enum POLARSSL_CIPHER_AES_256_CCM = MBEDTLS_CIPHER_AES_256_CCM;
enum POLARSSL_CIPHER_AES_256_CFB128 = MBEDTLS_CIPHER_AES_256_CFB128;
enum POLARSSL_CIPHER_AES_256_CTR = MBEDTLS_CIPHER_AES_256_CTR;
enum POLARSSL_CIPHER_AES_256_ECB = MBEDTLS_CIPHER_AES_256_ECB;
enum POLARSSL_CIPHER_AES_256_GCM = MBEDTLS_CIPHER_AES_256_GCM;
enum POLARSSL_CIPHER_ARC4_128 = MBEDTLS_CIPHER_ARC4_128;
enum POLARSSL_CIPHER_BLOWFISH_CBC = MBEDTLS_CIPHER_BLOWFISH_CBC;
enum POLARSSL_CIPHER_BLOWFISH_CFB64 = MBEDTLS_CIPHER_BLOWFISH_CFB64;
enum POLARSSL_CIPHER_BLOWFISH_CTR = MBEDTLS_CIPHER_BLOWFISH_CTR;
enum POLARSSL_CIPHER_BLOWFISH_ECB = MBEDTLS_CIPHER_BLOWFISH_ECB;
enum POLARSSL_CIPHER_CAMELLIA_128_CBC = MBEDTLS_CIPHER_CAMELLIA_128_CBC;
enum POLARSSL_CIPHER_CAMELLIA_128_CCM = MBEDTLS_CIPHER_CAMELLIA_128_CCM;
enum POLARSSL_CIPHER_CAMELLIA_128_CFB128 = MBEDTLS_CIPHER_CAMELLIA_128_CFB128;
enum POLARSSL_CIPHER_CAMELLIA_128_CTR = MBEDTLS_CIPHER_CAMELLIA_128_CTR;
enum POLARSSL_CIPHER_CAMELLIA_128_ECB = MBEDTLS_CIPHER_CAMELLIA_128_ECB;
enum POLARSSL_CIPHER_CAMELLIA_128_GCM = MBEDTLS_CIPHER_CAMELLIA_128_GCM;
enum POLARSSL_CIPHER_CAMELLIA_192_CBC = MBEDTLS_CIPHER_CAMELLIA_192_CBC;
enum POLARSSL_CIPHER_CAMELLIA_192_CCM = MBEDTLS_CIPHER_CAMELLIA_192_CCM;
enum POLARSSL_CIPHER_CAMELLIA_192_CFB128 = MBEDTLS_CIPHER_CAMELLIA_192_CFB128;
enum POLARSSL_CIPHER_CAMELLIA_192_CTR = MBEDTLS_CIPHER_CAMELLIA_192_CTR;
enum POLARSSL_CIPHER_CAMELLIA_192_ECB = MBEDTLS_CIPHER_CAMELLIA_192_ECB;
enum POLARSSL_CIPHER_CAMELLIA_192_GCM = MBEDTLS_CIPHER_CAMELLIA_192_GCM;
enum POLARSSL_CIPHER_CAMELLIA_256_CBC = MBEDTLS_CIPHER_CAMELLIA_256_CBC;
enum POLARSSL_CIPHER_CAMELLIA_256_CCM = MBEDTLS_CIPHER_CAMELLIA_256_CCM;
enum POLARSSL_CIPHER_CAMELLIA_256_CFB128 = MBEDTLS_CIPHER_CAMELLIA_256_CFB128;
enum POLARSSL_CIPHER_CAMELLIA_256_CTR = MBEDTLS_CIPHER_CAMELLIA_256_CTR;
enum POLARSSL_CIPHER_CAMELLIA_256_ECB = MBEDTLS_CIPHER_CAMELLIA_256_ECB;
enum POLARSSL_CIPHER_CAMELLIA_256_GCM = MBEDTLS_CIPHER_CAMELLIA_256_GCM;
enum POLARSSL_CIPHER_DES_CBC = MBEDTLS_CIPHER_DES_CBC;
enum POLARSSL_CIPHER_DES_ECB = MBEDTLS_CIPHER_DES_ECB;
enum POLARSSL_CIPHER_DES_EDE3_CBC = MBEDTLS_CIPHER_DES_EDE3_CBC;
enum POLARSSL_CIPHER_DES_EDE3_ECB = MBEDTLS_CIPHER_DES_EDE3_ECB;
enum POLARSSL_CIPHER_DES_EDE_CBC = MBEDTLS_CIPHER_DES_EDE_CBC;
enum POLARSSL_CIPHER_DES_EDE_ECB = MBEDTLS_CIPHER_DES_EDE_ECB;
enum POLARSSL_CIPHER_H = MBEDTLS_CIPHER_H;
enum POLARSSL_CIPHER_ID_3DES = MBEDTLS_CIPHER_ID_3DES;
enum POLARSSL_CIPHER_ID_AES = MBEDTLS_CIPHER_ID_AES;
enum POLARSSL_CIPHER_ID_ARC4 = MBEDTLS_CIPHER_ID_ARC4;
enum POLARSSL_CIPHER_ID_BLOWFISH = MBEDTLS_CIPHER_ID_BLOWFISH;
enum POLARSSL_CIPHER_ID_CAMELLIA = MBEDTLS_CIPHER_ID_CAMELLIA;
enum POLARSSL_CIPHER_ID_DES = MBEDTLS_CIPHER_ID_DES;
enum POLARSSL_CIPHER_ID_NONE = MBEDTLS_CIPHER_ID_NONE;
enum POLARSSL_CIPHER_ID_NULL = MBEDTLS_CIPHER_ID_NULL;
enum POLARSSL_CIPHER_MODE_AEAD = MBEDTLS_CIPHER_MODE_AEAD;
enum POLARSSL_CIPHER_MODE_STREAM = MBEDTLS_CIPHER_MODE_STREAM;
enum POLARSSL_CIPHER_MODE_WITH_PADDING = MBEDTLS_CIPHER_MODE_WITH_PADDING;
enum POLARSSL_CIPHER_NONE = MBEDTLS_CIPHER_NONE;
enum POLARSSL_CIPHER_NULL = MBEDTLS_CIPHER_NULL;
enum POLARSSL_CIPHER_VARIABLE_IV_LEN = MBEDTLS_CIPHER_VARIABLE_IV_LEN;
enum POLARSSL_CIPHER_VARIABLE_KEY_LEN = MBEDTLS_CIPHER_VARIABLE_KEY_LEN;
enum POLARSSL_CIPHER_WRAP_H = MBEDTLS_CIPHER_WRAP_H;
enum POLARSSL_CONFIG_H = MBEDTLS_CONFIG_H;
enum POLARSSL_CTR_DRBG_H = MBEDTLS_CTR_DRBG_H;
enum POLARSSL_DEBUG_H = MBEDTLS_DEBUG_H;
enum POLARSSL_DECRYPT = MBEDTLS_DECRYPT;
enum POLARSSL_DES_H = MBEDTLS_DES_H;
enum POLARSSL_DHM_H = MBEDTLS_DHM_H;
enum POLARSSL_DHM_RFC3526_MODP_2048_G = MBEDTLS_DHM_RFC3526_MODP_2048_G;
enum POLARSSL_DHM_RFC3526_MODP_2048_P = MBEDTLS_DHM_RFC3526_MODP_2048_P;
enum POLARSSL_DHM_RFC3526_MODP_3072_G = MBEDTLS_DHM_RFC3526_MODP_3072_G;
enum POLARSSL_DHM_RFC3526_MODP_3072_P = MBEDTLS_DHM_RFC3526_MODP_3072_P;
enum POLARSSL_DHM_RFC5114_MODP_2048_G = MBEDTLS_DHM_RFC5114_MODP_2048_G;
enum POLARSSL_DHM_RFC5114_MODP_2048_P = MBEDTLS_DHM_RFC5114_MODP_2048_P;
enum POLARSSL_ECDH_H = MBEDTLS_ECDH_H;
enum POLARSSL_ECDH_OURS = MBEDTLS_ECDH_OURS;
enum POLARSSL_ECDH_THEIRS = MBEDTLS_ECDH_THEIRS;
enum POLARSSL_ECDSA_H = MBEDTLS_ECDSA_H;
enum POLARSSL_ECP_DP_BP256R1 = MBEDTLS_ECP_DP_BP256R1;
enum POLARSSL_ECP_DP_BP384R1 = MBEDTLS_ECP_DP_BP384R1;
enum POLARSSL_ECP_DP_BP512R1 = MBEDTLS_ECP_DP_BP512R1;
enum POLARSSL_ECP_DP_M255 = MBEDTLS_ECP_DP_CURVE25519;
enum POLARSSL_ECP_DP_MAX = MBEDTLS_ECP_DP_MAX;
enum POLARSSL_ECP_DP_NONE = MBEDTLS_ECP_DP_NONE;
enum POLARSSL_ECP_DP_SECP192K1 = MBEDTLS_ECP_DP_SECP192K1;
enum POLARSSL_ECP_DP_SECP192R1 = MBEDTLS_ECP_DP_SECP192R1;
enum POLARSSL_ECP_DP_SECP224K1 = MBEDTLS_ECP_DP_SECP224K1;
enum POLARSSL_ECP_DP_SECP224R1 = MBEDTLS_ECP_DP_SECP224R1;
enum POLARSSL_ECP_DP_SECP256K1 = MBEDTLS_ECP_DP_SECP256K1;
enum POLARSSL_ECP_DP_SECP256R1 = MBEDTLS_ECP_DP_SECP256R1;
enum POLARSSL_ECP_DP_SECP384R1 = MBEDTLS_ECP_DP_SECP384R1;
enum POLARSSL_ECP_DP_SECP521R1 = MBEDTLS_ECP_DP_SECP521R1;
enum POLARSSL_ECP_H = MBEDTLS_ECP_H;
enum POLARSSL_ECP_MAX_BYTES = MBEDTLS_ECP_MAX_BYTES;
enum POLARSSL_ECP_MAX_PT_LEN = MBEDTLS_ECP_MAX_PT_LEN;
enum POLARSSL_ECP_PF_COMPRESSED = MBEDTLS_ECP_PF_COMPRESSED;
enum POLARSSL_ECP_PF_UNCOMPRESSED = MBEDTLS_ECP_PF_UNCOMPRESSED;
enum POLARSSL_ECP_TLS_NAMED_CURVE = MBEDTLS_ECP_TLS_NAMED_CURVE;
enum POLARSSL_ENCRYPT = MBEDTLS_ENCRYPT;
enum POLARSSL_ENTROPY_H = MBEDTLS_ENTROPY_H;
enum POLARSSL_ENTROPY_POLL_H = MBEDTLS_ENTROPY_POLL_H;
enum POLARSSL_ENTROPY_SHA256_ACCUMULATOR = MBEDTLS_ENTROPY_SHA256_ACCUMULATOR;
enum POLARSSL_ENTROPY_SHA512_ACCUMULATOR = MBEDTLS_ENTROPY_SHA512_ACCUMULATOR;
enum POLARSSL_ERROR_H = MBEDTLS_ERROR_H;
enum POLARSSL_ERR_AES_INVALID_INPUT_LENGTH = MBEDTLS_ERR_AES_INVALID_INPUT_LENGTH;
enum POLARSSL_ERR_AES_INVALID_KEY_LENGTH = MBEDTLS_ERR_AES_INVALID_KEY_LENGTH;
enum POLARSSL_ERR_ASN1_BUF_TOO_SMALL = MBEDTLS_ERR_ASN1_BUF_TOO_SMALL;
enum POLARSSL_ERR_ASN1_INVALID_DATA = MBEDTLS_ERR_ASN1_INVALID_DATA;
enum POLARSSL_ERR_ASN1_INVALID_LENGTH = MBEDTLS_ERR_ASN1_INVALID_LENGTH;
enum POLARSSL_ERR_ASN1_LENGTH_MISMATCH = MBEDTLS_ERR_ASN1_LENGTH_MISMATCH;
enum POLARSSL_ERR_ASN1_MALLOC_FAILED = MBEDTLS_ERR_ASN1_ALLOC_FAILED;
enum POLARSSL_ERR_ASN1_OUT_OF_DATA = MBEDTLS_ERR_ASN1_OUT_OF_DATA;
enum POLARSSL_ERR_ASN1_UNEXPECTED_TAG = MBEDTLS_ERR_ASN1_UNEXPECTED_TAG;
enum POLARSSL_ERR_BASE64_BUFFER_TOO_SMALL = MBEDTLS_ERR_BASE64_BUFFER_TOO_SMALL;
enum POLARSSL_ERR_BASE64_INVALID_CHARACTER = MBEDTLS_ERR_BASE64_INVALID_CHARACTER;
enum POLARSSL_ERR_BLOWFISH_INVALID_INPUT_LENGTH = MBEDTLS_ERR_BLOWFISH_INVALID_INPUT_LENGTH;
enum POLARSSL_ERR_BLOWFISH_INVALID_KEY_LENGTH = MBEDTLS_ERR_BLOWFISH_INVALID_KEY_LENGTH;
enum POLARSSL_ERR_CAMELLIA_INVALID_INPUT_LENGTH = MBEDTLS_ERR_CAMELLIA_INVALID_INPUT_LENGTH;
enum POLARSSL_ERR_CAMELLIA_INVALID_KEY_LENGTH = MBEDTLS_ERR_CAMELLIA_INVALID_KEY_LENGTH;
enum POLARSSL_ERR_CCM_AUTH_FAILED = MBEDTLS_ERR_CCM_AUTH_FAILED;
enum POLARSSL_ERR_CCM_BAD_INPUT = MBEDTLS_ERR_CCM_BAD_INPUT;
enum POLARSSL_ERR_CIPHER_ALLOC_FAILED = MBEDTLS_ERR_CIPHER_ALLOC_FAILED;
enum POLARSSL_ERR_CIPHER_AUTH_FAILED = MBEDTLS_ERR_CIPHER_AUTH_FAILED;
enum POLARSSL_ERR_CIPHER_BAD_INPUT_DATA = MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA;
enum POLARSSL_ERR_CIPHER_FEATURE_UNAVAILABLE = MBEDTLS_ERR_CIPHER_FEATURE_UNAVAILABLE;
enum POLARSSL_ERR_CIPHER_FULL_BLOCK_EXPECTED = MBEDTLS_ERR_CIPHER_FULL_BLOCK_EXPECTED;
enum POLARSSL_ERR_CIPHER_INVALID_PADDING = MBEDTLS_ERR_CIPHER_INVALID_PADDING;
enum POLARSSL_ERR_CTR_DRBG_ENTROPY_SOURCE_FAILED = MBEDTLS_ERR_CTR_DRBG_ENTROPY_SOURCE_FAILED;
enum POLARSSL_ERR_CTR_DRBG_FILE_IO_ERROR = MBEDTLS_ERR_CTR_DRBG_FILE_IO_ERROR;
enum POLARSSL_ERR_CTR_DRBG_INPUT_TOO_BIG = MBEDTLS_ERR_CTR_DRBG_INPUT_TOO_BIG;
enum POLARSSL_ERR_CTR_DRBG_REQUEST_TOO_BIG = MBEDTLS_ERR_CTR_DRBG_REQUEST_TOO_BIG;
enum POLARSSL_ERR_DES_INVALID_INPUT_LENGTH = MBEDTLS_ERR_DES_INVALID_INPUT_LENGTH;
enum POLARSSL_ERR_DHM_BAD_INPUT_DATA = MBEDTLS_ERR_DHM_BAD_INPUT_DATA;
enum POLARSSL_ERR_DHM_CALC_SECRET_FAILED = MBEDTLS_ERR_DHM_CALC_SECRET_FAILED;
enum POLARSSL_ERR_DHM_FILE_IO_ERROR = MBEDTLS_ERR_DHM_FILE_IO_ERROR;
enum POLARSSL_ERR_DHM_INVALID_FORMAT = MBEDTLS_ERR_DHM_INVALID_FORMAT;
enum POLARSSL_ERR_DHM_MAKE_PARAMS_FAILED = MBEDTLS_ERR_DHM_MAKE_PARAMS_FAILED;
enum POLARSSL_ERR_DHM_MAKE_PUBLIC_FAILED = MBEDTLS_ERR_DHM_MAKE_PUBLIC_FAILED;
enum POLARSSL_ERR_DHM_MALLOC_FAILED = MBEDTLS_ERR_DHM_ALLOC_FAILED;
enum POLARSSL_ERR_DHM_READ_PARAMS_FAILED = MBEDTLS_ERR_DHM_READ_PARAMS_FAILED;
enum POLARSSL_ERR_DHM_READ_PUBLIC_FAILED = MBEDTLS_ERR_DHM_READ_PUBLIC_FAILED;
enum POLARSSL_ERR_ECP_BAD_INPUT_DATA = MBEDTLS_ERR_ECP_BAD_INPUT_DATA;
enum POLARSSL_ERR_ECP_BUFFER_TOO_SMALL = MBEDTLS_ERR_ECP_BUFFER_TOO_SMALL;
enum POLARSSL_ERR_ECP_FEATURE_UNAVAILABLE = MBEDTLS_ERR_ECP_FEATURE_UNAVAILABLE;
enum POLARSSL_ERR_ECP_INVALID_KEY = MBEDTLS_ERR_ECP_INVALID_KEY;
enum POLARSSL_ERR_ECP_MALLOC_FAILED = MBEDTLS_ERR_ECP_ALLOC_FAILED;
enum POLARSSL_ERR_ECP_RANDOM_FAILED = MBEDTLS_ERR_ECP_RANDOM_FAILED;
enum POLARSSL_ERR_ECP_SIG_LEN_MISMATCH = MBEDTLS_ERR_ECP_SIG_LEN_MISMATCH;
enum POLARSSL_ERR_ECP_VERIFY_FAILED = MBEDTLS_ERR_ECP_VERIFY_FAILED;
enum POLARSSL_ERR_ENTROPY_FILE_IO_ERROR = MBEDTLS_ERR_ENTROPY_FILE_IO_ERROR;
enum POLARSSL_ERR_ENTROPY_MAX_SOURCES = MBEDTLS_ERR_ENTROPY_MAX_SOURCES;
enum POLARSSL_ERR_ENTROPY_NO_SOURCES_DEFINED = MBEDTLS_ERR_ENTROPY_NO_SOURCES_DEFINED;
enum POLARSSL_ERR_ENTROPY_SOURCE_FAILED = MBEDTLS_ERR_ENTROPY_SOURCE_FAILED;
enum POLARSSL_ERR_GCM_AUTH_FAILED = MBEDTLS_ERR_GCM_AUTH_FAILED;
enum POLARSSL_ERR_GCM_BAD_INPUT = MBEDTLS_ERR_GCM_BAD_INPUT;
enum POLARSSL_ERR_HMAC_DRBG_ENTROPY_SOURCE_FAILED = MBEDTLS_ERR_HMAC_DRBG_ENTROPY_SOURCE_FAILED;
enum POLARSSL_ERR_HMAC_DRBG_FILE_IO_ERROR = MBEDTLS_ERR_HMAC_DRBG_FILE_IO_ERROR;
enum POLARSSL_ERR_HMAC_DRBG_INPUT_TOO_BIG = MBEDTLS_ERR_HMAC_DRBG_INPUT_TOO_BIG;
enum POLARSSL_ERR_HMAC_DRBG_REQUEST_TOO_BIG = MBEDTLS_ERR_HMAC_DRBG_REQUEST_TOO_BIG;
enum POLARSSL_ERR_MD_ALLOC_FAILED = MBEDTLS_ERR_MD_ALLOC_FAILED;
enum POLARSSL_ERR_MD_BAD_INPUT_DATA = MBEDTLS_ERR_MD_BAD_INPUT_DATA;
enum POLARSSL_ERR_MD_FEATURE_UNAVAILABLE = MBEDTLS_ERR_MD_FEATURE_UNAVAILABLE;
enum POLARSSL_ERR_MD_FILE_IO_ERROR = MBEDTLS_ERR_MD_FILE_IO_ERROR;
enum POLARSSL_ERR_MPI_BAD_INPUT_DATA = MBEDTLS_ERR_MPI_BAD_INPUT_DATA;
enum POLARSSL_ERR_MPI_BUFFER_TOO_SMALL = MBEDTLS_ERR_MPI_BUFFER_TOO_SMALL;
enum POLARSSL_ERR_MPI_DIVISION_BY_ZERO = MBEDTLS_ERR_MPI_DIVISION_BY_ZERO;
enum POLARSSL_ERR_MPI_FILE_IO_ERROR = MBEDTLS_ERR_MPI_FILE_IO_ERROR;
enum POLARSSL_ERR_MPI_INVALID_CHARACTER = MBEDTLS_ERR_MPI_INVALID_CHARACTER;
enum POLARSSL_ERR_MPI_MALLOC_FAILED = MBEDTLS_ERR_MPI_ALLOC_FAILED;
enum POLARSSL_ERR_MPI_NEGATIVE_VALUE = MBEDTLS_ERR_MPI_NEGATIVE_VALUE;
enum POLARSSL_ERR_MPI_NOT_ACCEPTABLE = MBEDTLS_ERR_MPI_NOT_ACCEPTABLE;
enum POLARSSL_ERR_NET_ACCEPT_FAILED = MBEDTLS_ERR_NET_ACCEPT_FAILED;
enum POLARSSL_ERR_NET_BIND_FAILED = MBEDTLS_ERR_NET_BIND_FAILED;
enum POLARSSL_ERR_NET_CONNECT_FAILED = MBEDTLS_ERR_NET_CONNECT_FAILED;
enum POLARSSL_ERR_NET_CONN_RESET = MBEDTLS_ERR_NET_CONN_RESET;
enum POLARSSL_ERR_NET_LISTEN_FAILED = MBEDTLS_ERR_NET_LISTEN_FAILED;
enum POLARSSL_ERR_NET_RECV_FAILED = MBEDTLS_ERR_NET_RECV_FAILED;
enum POLARSSL_ERR_NET_SEND_FAILED = MBEDTLS_ERR_NET_SEND_FAILED;
enum POLARSSL_ERR_NET_SOCKET_FAILED = MBEDTLS_ERR_NET_SOCKET_FAILED;
enum POLARSSL_ERR_NET_TIMEOUT = MBEDTLS_ERR_SSL_TIMEOUT;
enum POLARSSL_ERR_NET_UNKNOWN_HOST = MBEDTLS_ERR_NET_UNKNOWN_HOST;
enum POLARSSL_ERR_NET_WANT_READ = MBEDTLS_ERR_SSL_WANT_READ;
enum POLARSSL_ERR_NET_WANT_WRITE = MBEDTLS_ERR_SSL_WANT_WRITE;
enum POLARSSL_ERR_OID_BUF_TOO_SMALL = MBEDTLS_ERR_OID_BUF_TOO_SMALL;
enum POLARSSL_ERR_OID_NOT_FOUND = MBEDTLS_ERR_OID_NOT_FOUND;
enum POLARSSL_ERR_PADLOCK_DATA_MISALIGNED = MBEDTLS_ERR_PADLOCK_DATA_MISALIGNED;
enum POLARSSL_ERR_PEM_BAD_INPUT_DATA = MBEDTLS_ERR_PEM_BAD_INPUT_DATA;
enum POLARSSL_ERR_PEM_FEATURE_UNAVAILABLE = MBEDTLS_ERR_PEM_FEATURE_UNAVAILABLE;
enum POLARSSL_ERR_PEM_INVALID_DATA = MBEDTLS_ERR_PEM_INVALID_DATA;
enum POLARSSL_ERR_PEM_INVALID_ENC_IV = MBEDTLS_ERR_PEM_INVALID_ENC_IV;
enum POLARSSL_ERR_PEM_MALLOC_FAILED = MBEDTLS_ERR_PEM_ALLOC_FAILED;
enum POLARSSL_ERR_PEM_NO_HEADER_FOOTER_PRESENT = MBEDTLS_ERR_PEM_NO_HEADER_FOOTER_PRESENT;
enum POLARSSL_ERR_PEM_PASSWORD_MISMATCH = MBEDTLS_ERR_PEM_PASSWORD_MISMATCH;
enum POLARSSL_ERR_PEM_PASSWORD_REQUIRED = MBEDTLS_ERR_PEM_PASSWORD_REQUIRED;
enum POLARSSL_ERR_PEM_UNKNOWN_ENC_ALG = MBEDTLS_ERR_PEM_UNKNOWN_ENC_ALG;
enum POLARSSL_ERR_PKCS12_BAD_INPUT_DATA = MBEDTLS_ERR_PKCS12_BAD_INPUT_DATA;
enum POLARSSL_ERR_PKCS12_FEATURE_UNAVAILABLE = MBEDTLS_ERR_PKCS12_FEATURE_UNAVAILABLE;
enum POLARSSL_ERR_PKCS12_PASSWORD_MISMATCH = MBEDTLS_ERR_PKCS12_PASSWORD_MISMATCH;
enum POLARSSL_ERR_PKCS12_PBE_INVALID_FORMAT = MBEDTLS_ERR_PKCS12_PBE_INVALID_FORMAT;
enum POLARSSL_ERR_PKCS5_BAD_INPUT_DATA = MBEDTLS_ERR_PKCS5_BAD_INPUT_DATA;
enum POLARSSL_ERR_PKCS5_FEATURE_UNAVAILABLE = MBEDTLS_ERR_PKCS5_FEATURE_UNAVAILABLE;
enum POLARSSL_ERR_PKCS5_INVALID_FORMAT = MBEDTLS_ERR_PKCS5_INVALID_FORMAT;
enum POLARSSL_ERR_PKCS5_PASSWORD_MISMATCH = MBEDTLS_ERR_PKCS5_PASSWORD_MISMATCH;
enum POLARSSL_ERR_PK_BAD_INPUT_DATA = MBEDTLS_ERR_PK_BAD_INPUT_DATA;
enum POLARSSL_ERR_PK_FEATURE_UNAVAILABLE = MBEDTLS_ERR_PK_FEATURE_UNAVAILABLE;
enum POLARSSL_ERR_PK_FILE_IO_ERROR = MBEDTLS_ERR_PK_FILE_IO_ERROR;
enum POLARSSL_ERR_PK_INVALID_ALG = MBEDTLS_ERR_PK_INVALID_ALG;
enum POLARSSL_ERR_PK_INVALID_PUBKEY = MBEDTLS_ERR_PK_INVALID_PUBKEY;
enum POLARSSL_ERR_PK_KEY_INVALID_FORMAT = MBEDTLS_ERR_PK_KEY_INVALID_FORMAT;
enum POLARSSL_ERR_PK_KEY_INVALID_VERSION = MBEDTLS_ERR_PK_KEY_INVALID_VERSION;
enum POLARSSL_ERR_PK_MALLOC_FAILED = MBEDTLS_ERR_PK_ALLOC_FAILED;
enum POLARSSL_ERR_PK_PASSWORD_MISMATCH = MBEDTLS_ERR_PK_PASSWORD_MISMATCH;
enum POLARSSL_ERR_PK_PASSWORD_REQUIRED = MBEDTLS_ERR_PK_PASSWORD_REQUIRED;
enum POLARSSL_ERR_PK_SIG_LEN_MISMATCH = MBEDTLS_ERR_PK_SIG_LEN_MISMATCH;
enum POLARSSL_ERR_PK_TYPE_MISMATCH = MBEDTLS_ERR_PK_TYPE_MISMATCH;
enum POLARSSL_ERR_PK_UNKNOWN_NAMED_CURVE = MBEDTLS_ERR_PK_UNKNOWN_NAMED_CURVE;
enum POLARSSL_ERR_PK_UNKNOWN_PK_ALG = MBEDTLS_ERR_PK_UNKNOWN_PK_ALG;
enum POLARSSL_ERR_RSA_BAD_INPUT_DATA = MBEDTLS_ERR_RSA_BAD_INPUT_DATA;
enum POLARSSL_ERR_RSA_INVALID_PADDING = MBEDTLS_ERR_RSA_INVALID_PADDING;
enum POLARSSL_ERR_RSA_KEY_CHECK_FAILED = MBEDTLS_ERR_RSA_KEY_CHECK_FAILED;
enum POLARSSL_ERR_RSA_KEY_GEN_FAILED = MBEDTLS_ERR_RSA_KEY_GEN_FAILED;
enum POLARSSL_ERR_RSA_OUTPUT_TOO_LARGE = MBEDTLS_ERR_RSA_OUTPUT_TOO_LARGE;
enum POLARSSL_ERR_RSA_PRIVATE_FAILED = MBEDTLS_ERR_RSA_PRIVATE_FAILED;
enum POLARSSL_ERR_RSA_PUBLIC_FAILED = MBEDTLS_ERR_RSA_PUBLIC_FAILED;
enum POLARSSL_ERR_RSA_RNG_FAILED = MBEDTLS_ERR_RSA_RNG_FAILED;
enum POLARSSL_ERR_RSA_VERIFY_FAILED = MBEDTLS_ERR_RSA_VERIFY_FAILED;
enum POLARSSL_ERR_SSL_BAD_HS_CERTIFICATE = MBEDTLS_ERR_SSL_BAD_HS_CERTIFICATE;
enum POLARSSL_ERR_SSL_BAD_HS_CERTIFICATE_REQUEST = MBEDTLS_ERR_SSL_BAD_HS_CERTIFICATE_REQUEST;
enum POLARSSL_ERR_SSL_BAD_HS_CERTIFICATE_VERIFY = MBEDTLS_ERR_SSL_BAD_HS_CERTIFICATE_VERIFY;
enum POLARSSL_ERR_SSL_BAD_HS_CHANGE_CIPHER_SPEC = MBEDTLS_ERR_SSL_BAD_HS_CHANGE_CIPHER_SPEC;
enum POLARSSL_ERR_SSL_BAD_HS_CLIENT_HELLO = MBEDTLS_ERR_SSL_BAD_HS_CLIENT_HELLO;
enum POLARSSL_ERR_SSL_BAD_HS_CLIENT_KEY_EXCHANGE = MBEDTLS_ERR_SSL_BAD_HS_CLIENT_KEY_EXCHANGE;
enum POLARSSL_ERR_SSL_BAD_HS_CLIENT_KEY_EXCHANGE_CS = MBEDTLS_ERR_SSL_BAD_HS_CLIENT_KEY_EXCHANGE_CS;
enum POLARSSL_ERR_SSL_BAD_HS_CLIENT_KEY_EXCHANGE_RP = MBEDTLS_ERR_SSL_BAD_HS_CLIENT_KEY_EXCHANGE_RP;
enum POLARSSL_ERR_SSL_BAD_HS_FINISHED = MBEDTLS_ERR_SSL_BAD_HS_FINISHED;
enum POLARSSL_ERR_SSL_BAD_HS_NEW_SESSION_TICKET = MBEDTLS_ERR_SSL_BAD_HS_NEW_SESSION_TICKET;
enum POLARSSL_ERR_SSL_BAD_HS_PROTOCOL_VERSION = MBEDTLS_ERR_SSL_BAD_HS_PROTOCOL_VERSION;
enum POLARSSL_ERR_SSL_BAD_HS_SERVER_HELLO = MBEDTLS_ERR_SSL_BAD_HS_SERVER_HELLO;
enum POLARSSL_ERR_SSL_BAD_HS_SERVER_HELLO_DONE = MBEDTLS_ERR_SSL_BAD_HS_SERVER_HELLO_DONE;
enum POLARSSL_ERR_SSL_BAD_HS_SERVER_KEY_EXCHANGE = MBEDTLS_ERR_SSL_BAD_HS_SERVER_KEY_EXCHANGE;
enum POLARSSL_ERR_SSL_BAD_INPUT_DATA = MBEDTLS_ERR_SSL_BAD_INPUT_DATA;
enum POLARSSL_ERR_SSL_BUFFER_TOO_SMALL = MBEDTLS_ERR_SSL_BUFFER_TOO_SMALL;
enum POLARSSL_ERR_SSL_CA_CHAIN_REQUIRED = MBEDTLS_ERR_SSL_CA_CHAIN_REQUIRED;
enum POLARSSL_ERR_SSL_CERTIFICATE_REQUIRED = MBEDTLS_ERR_SSL_CERTIFICATE_REQUIRED;
enum POLARSSL_ERR_SSL_CERTIFICATE_TOO_LARGE = MBEDTLS_ERR_SSL_CERTIFICATE_TOO_LARGE;
enum POLARSSL_ERR_SSL_COMPRESSION_FAILED = MBEDTLS_ERR_SSL_COMPRESSION_FAILED;
enum POLARSSL_ERR_SSL_CONN_EOF = MBEDTLS_ERR_SSL_CONN_EOF;
enum POLARSSL_ERR_SSL_COUNTER_WRAPPING = MBEDTLS_ERR_SSL_COUNTER_WRAPPING;
enum POLARSSL_ERR_SSL_FATAL_ALERT_MESSAGE = MBEDTLS_ERR_SSL_FATAL_ALERT_MESSAGE;
enum POLARSSL_ERR_SSL_FEATURE_UNAVAILABLE = MBEDTLS_ERR_SSL_FEATURE_UNAVAILABLE;
enum POLARSSL_ERR_SSL_HELLO_VERIFY_REQUIRED = MBEDTLS_ERR_SSL_HELLO_VERIFY_REQUIRED;
enum POLARSSL_ERR_SSL_HW_ACCEL_FAILED = MBEDTLS_ERR_SSL_HW_ACCEL_FAILED;
enum POLARSSL_ERR_SSL_HW_ACCEL_FALLTHROUGH = MBEDTLS_ERR_SSL_HW_ACCEL_FALLTHROUGH;
enum POLARSSL_ERR_SSL_INTERNAL_ERROR = MBEDTLS_ERR_SSL_INTERNAL_ERROR;
enum POLARSSL_ERR_SSL_INVALID_MAC = MBEDTLS_ERR_SSL_INVALID_MAC;
enum POLARSSL_ERR_SSL_INVALID_RECORD = MBEDTLS_ERR_SSL_INVALID_RECORD;
enum POLARSSL_ERR_SSL_MALLOC_FAILED = MBEDTLS_ERR_SSL_ALLOC_FAILED;
enum POLARSSL_ERR_SSL_NO_CIPHER_CHOSEN = MBEDTLS_ERR_SSL_NO_CIPHER_CHOSEN;
enum POLARSSL_ERR_SSL_NO_CLIENT_CERTIFICATE = MBEDTLS_ERR_SSL_NO_CLIENT_CERTIFICATE;
enum POLARSSL_ERR_SSL_NO_RNG = MBEDTLS_ERR_SSL_NO_RNG;
enum POLARSSL_ERR_SSL_NO_USABLE_CIPHERSUITE = MBEDTLS_ERR_SSL_NO_USABLE_CIPHERSUITE;
enum POLARSSL_ERR_SSL_PEER_CLOSE_NOTIFY = MBEDTLS_ERR_SSL_PEER_CLOSE_NOTIFY;
enum POLARSSL_ERR_SSL_PEER_VERIFY_FAILED = MBEDTLS_ERR_SSL_PEER_VERIFY_FAILED;
enum POLARSSL_ERR_SSL_PK_TYPE_MISMATCH = MBEDTLS_ERR_SSL_PK_TYPE_MISMATCH;
enum POLARSSL_ERR_SSL_PRIVATE_KEY_REQUIRED = MBEDTLS_ERR_SSL_PRIVATE_KEY_REQUIRED;
enum POLARSSL_ERR_SSL_SESSION_TICKET_EXPIRED = MBEDTLS_ERR_SSL_SESSION_TICKET_EXPIRED;
enum POLARSSL_ERR_SSL_UNEXPECTED_MESSAGE = MBEDTLS_ERR_SSL_UNEXPECTED_MESSAGE;
enum POLARSSL_ERR_SSL_UNKNOWN_CIPHER = MBEDTLS_ERR_SSL_UNKNOWN_CIPHER;
enum POLARSSL_ERR_SSL_UNKNOWN_IDENTITY = MBEDTLS_ERR_SSL_UNKNOWN_IDENTITY;
enum POLARSSL_ERR_SSL_WAITING_SERVER_HELLO_RENEGO = MBEDTLS_ERR_SSL_WAITING_SERVER_HELLO_RENEGO;
enum POLARSSL_ERR_THREADING_BAD_INPUT_DATA = MBEDTLS_ERR_THREADING_BAD_INPUT_DATA;
enum POLARSSL_ERR_THREADING_FEATURE_UNAVAILABLE = MBEDTLS_ERR_THREADING_FEATURE_UNAVAILABLE;
enum POLARSSL_ERR_THREADING_MUTEX_ERROR = MBEDTLS_ERR_THREADING_MUTEX_ERROR;
enum POLARSSL_ERR_X509_BAD_INPUT_DATA = MBEDTLS_ERR_X509_BAD_INPUT_DATA;
enum POLARSSL_ERR_X509_CERT_UNKNOWN_FORMAT = MBEDTLS_ERR_X509_CERT_UNKNOWN_FORMAT;
enum POLARSSL_ERR_X509_CERT_VERIFY_FAILED = MBEDTLS_ERR_X509_CERT_VERIFY_FAILED;
enum POLARSSL_ERR_X509_FEATURE_UNAVAILABLE = MBEDTLS_ERR_X509_FEATURE_UNAVAILABLE;
enum POLARSSL_ERR_X509_FILE_IO_ERROR = MBEDTLS_ERR_X509_FILE_IO_ERROR;
enum POLARSSL_ERR_X509_INVALID_ALG = MBEDTLS_ERR_X509_INVALID_ALG;
enum POLARSSL_ERR_X509_INVALID_DATE = MBEDTLS_ERR_X509_INVALID_DATE;
enum POLARSSL_ERR_X509_INVALID_EXTENSIONS = MBEDTLS_ERR_X509_INVALID_EXTENSIONS;
enum POLARSSL_ERR_X509_INVALID_FORMAT = MBEDTLS_ERR_X509_INVALID_FORMAT;
enum POLARSSL_ERR_X509_INVALID_NAME = MBEDTLS_ERR_X509_INVALID_NAME;
enum POLARSSL_ERR_X509_INVALID_SERIAL = MBEDTLS_ERR_X509_INVALID_SERIAL;
enum POLARSSL_ERR_X509_INVALID_SIGNATURE = MBEDTLS_ERR_X509_INVALID_SIGNATURE;
enum POLARSSL_ERR_X509_INVALID_VERSION = MBEDTLS_ERR_X509_INVALID_VERSION;
enum POLARSSL_ERR_X509_MALLOC_FAILED = MBEDTLS_ERR_X509_ALLOC_FAILED;
enum POLARSSL_ERR_X509_SIG_MISMATCH = MBEDTLS_ERR_X509_SIG_MISMATCH;
enum POLARSSL_ERR_X509_UNKNOWN_OID = MBEDTLS_ERR_X509_UNKNOWN_OID;
enum POLARSSL_ERR_X509_UNKNOWN_SIG_ALG = MBEDTLS_ERR_X509_UNKNOWN_SIG_ALG;
enum POLARSSL_ERR_X509_UNKNOWN_VERSION = MBEDTLS_ERR_X509_UNKNOWN_VERSION;
enum POLARSSL_ERR_XTEA_INVALID_INPUT_LENGTH = MBEDTLS_ERR_XTEA_INVALID_INPUT_LENGTH;
enum POLARSSL_GCM_H = MBEDTLS_GCM_H;
enum POLARSSL_HAVEGE_H = MBEDTLS_HAVEGE_H;
enum POLARSSL_HAVE_INT32 = MBEDTLS_HAVE_INT32;
enum POLARSSL_HAVE_INT64 = MBEDTLS_HAVE_INT64;
enum POLARSSL_HAVE_UDBL = MBEDTLS_HAVE_UDBL;
enum POLARSSL_HAVE_X86 = MBEDTLS_HAVE_X86;
enum POLARSSL_HAVE_X86_64 = MBEDTLS_HAVE_X86_64;
enum POLARSSL_HMAC_DRBG_H = MBEDTLS_HMAC_DRBG_H;
enum POLARSSL_HMAC_DRBG_PR_OFF = MBEDTLS_HMAC_DRBG_PR_OFF;
enum POLARSSL_HMAC_DRBG_PR_ON = MBEDTLS_HMAC_DRBG_PR_ON;
enum POLARSSL_KEY_EXCHANGE_DHE_PSK = MBEDTLS_KEY_EXCHANGE_DHE_PSK;
enum POLARSSL_KEY_EXCHANGE_DHE_RSA = MBEDTLS_KEY_EXCHANGE_DHE_RSA;
enum POLARSSL_KEY_EXCHANGE_ECDHE_ECDSA = MBEDTLS_KEY_EXCHANGE_ECDHE_ECDSA;
enum POLARSSL_KEY_EXCHANGE_ECDHE_PSK = MBEDTLS_KEY_EXCHANGE_ECDHE_PSK;
enum POLARSSL_KEY_EXCHANGE_ECDHE_RSA = MBEDTLS_KEY_EXCHANGE_ECDHE_RSA;
enum POLARSSL_KEY_EXCHANGE_ECDH_ECDSA = MBEDTLS_KEY_EXCHANGE_ECDH_ECDSA;
enum POLARSSL_KEY_EXCHANGE_ECDH_RSA = MBEDTLS_KEY_EXCHANGE_ECDH_RSA;
enum POLARSSL_KEY_EXCHANGE_NONE = MBEDTLS_KEY_EXCHANGE_NONE;
enum POLARSSL_KEY_EXCHANGE_PSK = MBEDTLS_KEY_EXCHANGE_PSK;
enum POLARSSL_KEY_EXCHANGE_RSA = MBEDTLS_KEY_EXCHANGE_RSA;
enum POLARSSL_KEY_EXCHANGE_RSA_PSK = MBEDTLS_KEY_EXCHANGE_RSA_PSK;
enum POLARSSL_KEY_EXCHANGE__SOME__ECDHE_ENABLED = MBEDTLS_KEY_EXCHANGE_SOME_ECDHE_ENABLED;
enum POLARSSL_KEY_EXCHANGE__SOME__PSK_ENABLED = MBEDTLS_KEY_EXCHANGE_SOME_PSK_ENABLED;
enum POLARSSL_KEY_EXCHANGE__WITH_CERT__ENABLED = MBEDTLS_KEY_EXCHANGE_WITH_CERT_ENABLED;
enum POLARSSL_KEY_LENGTH_DES = MBEDTLS_KEY_LENGTH_DES;
enum POLARSSL_KEY_LENGTH_DES_EDE = MBEDTLS_KEY_LENGTH_DES_EDE;
enum POLARSSL_KEY_LENGTH_DES_EDE3 = MBEDTLS_KEY_LENGTH_DES_EDE3;
enum POLARSSL_KEY_LENGTH_NONE = MBEDTLS_KEY_LENGTH_NONE;
enum POLARSSL_MAX_BLOCK_LENGTH = MBEDTLS_MAX_BLOCK_LENGTH;
enum POLARSSL_MAX_IV_LENGTH = MBEDTLS_MAX_IV_LENGTH;
enum POLARSSL_MD2_H = MBEDTLS_MD2_H;
enum POLARSSL_MD4_H = MBEDTLS_MD4_H;
enum POLARSSL_MD5_H = MBEDTLS_MD5_H;
enum POLARSSL_MD_H = MBEDTLS_MD_H;
enum POLARSSL_MD_MAX_SIZE = MBEDTLS_MD_MAX_SIZE;
enum POLARSSL_MD_MD2 = MBEDTLS_MD_MD2;
enum POLARSSL_MD_MD4 = MBEDTLS_MD_MD4;
enum POLARSSL_MD_MD5 = MBEDTLS_MD_MD5;
enum POLARSSL_MD_NONE = MBEDTLS_MD_NONE;
enum POLARSSL_MD_RIPEMD160 = MBEDTLS_MD_RIPEMD160;
enum POLARSSL_MD_SHA1 = MBEDTLS_MD_SHA1;
enum POLARSSL_MD_SHA224 = MBEDTLS_MD_SHA224;
enum POLARSSL_MD_SHA256 = MBEDTLS_MD_SHA256;
enum POLARSSL_MD_SHA384 = MBEDTLS_MD_SHA384;
enum POLARSSL_MD_SHA512 = MBEDTLS_MD_SHA512;
enum POLARSSL_MD_WRAP_H = MBEDTLS_MD_WRAP_H;
enum POLARSSL_MEMORY_BUFFER_ALLOC_H = MBEDTLS_MEMORY_BUFFER_ALLOC_H;
enum POLARSSL_MODE_CBC = MBEDTLS_MODE_CBC;
enum POLARSSL_MODE_CCM = MBEDTLS_MODE_CCM;
enum POLARSSL_MODE_CFB = MBEDTLS_MODE_CFB;
enum POLARSSL_MODE_CTR = MBEDTLS_MODE_CTR;
enum POLARSSL_MODE_ECB = MBEDTLS_MODE_ECB;
enum POLARSSL_MODE_GCM = MBEDTLS_MODE_GCM;
enum POLARSSL_MODE_NONE = MBEDTLS_MODE_NONE;
enum POLARSSL_MODE_OFB = MBEDTLS_MODE_OFB;
enum POLARSSL_MODE_STREAM = MBEDTLS_MODE_STREAM;
enum POLARSSL_MPI_MAX_BITS = MBEDTLS_MPI_MAX_BITS;
enum POLARSSL_MPI_MAX_BITS_SCALE100 = MBEDTLS_MPI_MAX_BITS_SCALE100;
enum POLARSSL_MPI_MAX_LIMBS = MBEDTLS_MPI_MAX_LIMBS;
enum POLARSSL_MPI_RW_BUFFER_SIZE = MBEDTLS_MPI_RW_BUFFER_SIZE;
enum POLARSSL_NET_H = MBEDTLS_NET_SOCKETS_H;
enum POLARSSL_NET_LISTEN_BACKLOG = MBEDTLS_NET_LISTEN_BACKLOG;
enum POLARSSL_OID_H = MBEDTLS_OID_H;
enum POLARSSL_OPERATION_NONE = MBEDTLS_OPERATION_NONE;
enum POLARSSL_PADDING_NONE = MBEDTLS_PADDING_NONE;
enum POLARSSL_PADDING_ONE_AND_ZEROS = MBEDTLS_PADDING_ONE_AND_ZEROS;
enum POLARSSL_PADDING_PKCS7 = MBEDTLS_PADDING_PKCS7;
enum POLARSSL_PADDING_ZEROS = MBEDTLS_PADDING_ZEROS;
enum POLARSSL_PADDING_ZEROS_AND_LEN = MBEDTLS_PADDING_ZEROS_AND_LEN;
enum POLARSSL_PADLOCK_H = MBEDTLS_PADLOCK_H;
enum POLARSSL_PEM_H = MBEDTLS_PEM_H;
enum POLARSSL_PKCS11_H = MBEDTLS_PKCS11_H;
enum POLARSSL_PKCS12_H = MBEDTLS_PKCS12_H;
enum POLARSSL_PKCS5_H = MBEDTLS_PKCS5_H;
enum POLARSSL_PK_DEBUG_ECP = MBEDTLS_PK_DEBUG_ECP;
enum POLARSSL_PK_DEBUG_MAX_ITEMS = MBEDTLS_PK_DEBUG_MAX_ITEMS;
enum POLARSSL_PK_DEBUG_MPI = MBEDTLS_PK_DEBUG_MPI;
enum POLARSSL_PK_DEBUG_NONE = MBEDTLS_PK_DEBUG_NONE;
enum POLARSSL_PK_ECDSA = MBEDTLS_PK_ECDSA;
enum POLARSSL_PK_ECKEY = MBEDTLS_PK_ECKEY;
enum POLARSSL_PK_ECKEY_DH = MBEDTLS_PK_ECKEY_DH;
enum POLARSSL_PK_H = MBEDTLS_PK_H;
enum POLARSSL_PK_NONE = MBEDTLS_PK_NONE;
enum POLARSSL_PK_RSA = MBEDTLS_PK_RSA;
enum POLARSSL_PK_RSASSA_PSS = MBEDTLS_PK_RSASSA_PSS;
enum POLARSSL_PK_RSA_ALT = MBEDTLS_PK_RSA_ALT;
enum POLARSSL_PK_WRAP_H = MBEDTLS_PK_WRAP_H;
enum POLARSSL_PLATFORM_H = MBEDTLS_PLATFORM_H;
enum POLARSSL_PREMASTER_SIZE = MBEDTLS_PREMASTER_SIZE;
enum POLARSSL_RIPEMD160_H = MBEDTLS_RIPEMD160_H;
enum POLARSSL_RSA_H = MBEDTLS_RSA_H;
enum POLARSSL_SHA1_H = MBEDTLS_SHA1_H;
enum POLARSSL_SHA256_H = MBEDTLS_SHA256_H;
enum POLARSSL_SHA512_H = MBEDTLS_SHA512_H;
enum POLARSSL_SSL_CACHE_H = MBEDTLS_SSL_CACHE_H;
enum POLARSSL_SSL_CIPHERSUITES_H = MBEDTLS_SSL_CIPHERSUITES_H;
enum POLARSSL_SSL_COOKIE_H = MBEDTLS_SSL_COOKIE_H;
enum POLARSSL_SSL_H = MBEDTLS_SSL_H;
enum POLARSSL_THREADING_H = MBEDTLS_THREADING_H;
enum POLARSSL_THREADING_IMPL = MBEDTLS_THREADING_IMPL;
enum POLARSSL_TIMING_H = MBEDTLS_TIMING_H;
enum POLARSSL_VERSION_H = MBEDTLS_VERSION_H;
enum POLARSSL_VERSION_MAJOR = MBEDTLS_VERSION_MAJOR;
enum POLARSSL_VERSION_MINOR = MBEDTLS_VERSION_MINOR;
enum POLARSSL_VERSION_NUMBER = MBEDTLS_VERSION_NUMBER;
enum POLARSSL_VERSION_PATCH = MBEDTLS_VERSION_PATCH;
enum POLARSSL_VERSION_STRING = MBEDTLS_VERSION_STRING;
enum POLARSSL_VERSION_STRING_FULL = MBEDTLS_VERSION_STRING_FULL;
enum POLARSSL_X509_CRL_H = MBEDTLS_X509_CRL_H;
enum POLARSSL_X509_CRT_H = MBEDTLS_X509_CRT_H;
enum POLARSSL_X509_CSR_H = MBEDTLS_X509_CSR_H;
enum POLARSSL_X509_H = MBEDTLS_X509_H;
enum POLARSSL_XTEA_H = MBEDTLS_XTEA_H;
enum RSA_CRYPT = MBEDTLS_RSA_CRYPT;
enum RSA_PKCS_V15 = MBEDTLS_RSA_PKCS_V15;
enum RSA_PKCS_V21 = MBEDTLS_RSA_PKCS_V21;
enum RSA_PRIVATE = MBEDTLS_RSA_PRIVATE;
enum RSA_PUBLIC = MBEDTLS_RSA_PUBLIC;
enum RSA_SALT_LEN_ANY = MBEDTLS_RSA_SALT_LEN_ANY;
enum RSA_SIGN = MBEDTLS_RSA_SIGN;
enum SSL_ALERT_LEVEL_FATAL = MBEDTLS_SSL_ALERT_LEVEL_FATAL;
enum SSL_ALERT_LEVEL_WARNING = MBEDTLS_SSL_ALERT_LEVEL_WARNING;
enum SSL_ALERT_MSG_ACCESS_DENIED = MBEDTLS_SSL_ALERT_MSG_ACCESS_DENIED;
enum SSL_ALERT_MSG_BAD_CERT = MBEDTLS_SSL_ALERT_MSG_BAD_CERT;
enum SSL_ALERT_MSG_BAD_RECORD_MAC = MBEDTLS_SSL_ALERT_MSG_BAD_RECORD_MAC;
enum SSL_ALERT_MSG_CERT_EXPIRED = MBEDTLS_SSL_ALERT_MSG_CERT_EXPIRED;
enum SSL_ALERT_MSG_CERT_REVOKED = MBEDTLS_SSL_ALERT_MSG_CERT_REVOKED;
enum SSL_ALERT_MSG_CERT_UNKNOWN = MBEDTLS_SSL_ALERT_MSG_CERT_UNKNOWN;
enum SSL_ALERT_MSG_CLOSE_NOTIFY = MBEDTLS_SSL_ALERT_MSG_CLOSE_NOTIFY;
enum SSL_ALERT_MSG_DECODE_ERROR = MBEDTLS_SSL_ALERT_MSG_DECODE_ERROR;
enum SSL_ALERT_MSG_DECOMPRESSION_FAILURE = MBEDTLS_SSL_ALERT_MSG_DECOMPRESSION_FAILURE;
enum SSL_ALERT_MSG_DECRYPTION_FAILED = MBEDTLS_SSL_ALERT_MSG_DECRYPTION_FAILED;
enum SSL_ALERT_MSG_DECRYPT_ERROR = MBEDTLS_SSL_ALERT_MSG_DECRYPT_ERROR;
enum SSL_ALERT_MSG_EXPORT_RESTRICTION = MBEDTLS_SSL_ALERT_MSG_EXPORT_RESTRICTION;
enum SSL_ALERT_MSG_HANDSHAKE_FAILURE = MBEDTLS_SSL_ALERT_MSG_HANDSHAKE_FAILURE;
enum SSL_ALERT_MSG_ILLEGAL_PARAMETER = MBEDTLS_SSL_ALERT_MSG_ILLEGAL_PARAMETER;
enum SSL_ALERT_MSG_INAPROPRIATE_FALLBACK = MBEDTLS_SSL_ALERT_MSG_INAPROPRIATE_FALLBACK;
enum SSL_ALERT_MSG_INSUFFICIENT_SECURITY = MBEDTLS_SSL_ALERT_MSG_INSUFFICIENT_SECURITY;
enum SSL_ALERT_MSG_INTERNAL_ERROR = MBEDTLS_SSL_ALERT_MSG_INTERNAL_ERROR;
enum SSL_ALERT_MSG_NO_APPLICATION_PROTOCOL = MBEDTLS_SSL_ALERT_MSG_NO_APPLICATION_PROTOCOL;
enum SSL_ALERT_MSG_NO_CERT = MBEDTLS_SSL_ALERT_MSG_NO_CERT;
enum SSL_ALERT_MSG_NO_RENEGOTIATION = MBEDTLS_SSL_ALERT_MSG_NO_RENEGOTIATION;
enum SSL_ALERT_MSG_PROTOCOL_VERSION = MBEDTLS_SSL_ALERT_MSG_PROTOCOL_VERSION;
enum SSL_ALERT_MSG_RECORD_OVERFLOW = MBEDTLS_SSL_ALERT_MSG_RECORD_OVERFLOW;
enum SSL_ALERT_MSG_UNEXPECTED_MESSAGE = MBEDTLS_SSL_ALERT_MSG_UNEXPECTED_MESSAGE;
enum SSL_ALERT_MSG_UNKNOWN_CA = MBEDTLS_SSL_ALERT_MSG_UNKNOWN_CA;
enum SSL_ALERT_MSG_UNKNOWN_PSK_IDENTITY = MBEDTLS_SSL_ALERT_MSG_UNKNOWN_PSK_IDENTITY;
enum SSL_ALERT_MSG_UNRECOGNIZED_NAME = MBEDTLS_SSL_ALERT_MSG_UNRECOGNIZED_NAME;
enum SSL_ALERT_MSG_UNSUPPORTED_CERT = MBEDTLS_SSL_ALERT_MSG_UNSUPPORTED_CERT;
enum SSL_ALERT_MSG_UNSUPPORTED_EXT = MBEDTLS_SSL_ALERT_MSG_UNSUPPORTED_EXT;
enum SSL_ALERT_MSG_USER_CANCELED = MBEDTLS_SSL_ALERT_MSG_USER_CANCELED;
enum SSL_ANTI_REPLAY_DISABLED = MBEDTLS_SSL_ANTI_REPLAY_DISABLED;
enum SSL_ANTI_REPLAY_ENABLED = MBEDTLS_SSL_ANTI_REPLAY_ENABLED;
enum SSL_ARC4_DISABLED = MBEDTLS_SSL_ARC4_DISABLED;
enum SSL_ARC4_ENABLED = MBEDTLS_SSL_ARC4_ENABLED;
enum SSL_BUFFER_LEN = (MBEDTLS_SSL_IN_BUFFER_LEN < MBEDTLS_SSL_OUT_BUFFER_LEN) ? MBEDTLS_SSL_IN_BUFFER_LEN : MBEDTLS_SSL_OUT_BUFFER_LEN;
enum SSL_CACHE_DEFAULT_MAX_ENTRIES = MBEDTLS_SSL_CACHE_DEFAULT_MAX_ENTRIES;
enum SSL_CACHE_DEFAULT_TIMEOUT = MBEDTLS_SSL_CACHE_DEFAULT_TIMEOUT;
enum SSL_CBC_RECORD_SPLITTING_DISABLED = MBEDTLS_SSL_CBC_RECORD_SPLITTING_DISABLED;
enum SSL_CBC_RECORD_SPLITTING_ENABLED = MBEDTLS_SSL_CBC_RECORD_SPLITTING_ENABLED;
enum SSL_CERTIFICATE_REQUEST = MBEDTLS_SSL_CERTIFICATE_REQUEST;
enum SSL_CERTIFICATE_VERIFY = MBEDTLS_SSL_CERTIFICATE_VERIFY;
enum SSL_CERT_TYPE_ECDSA_SIGN = MBEDTLS_SSL_CERT_TYPE_ECDSA_SIGN;
enum SSL_CERT_TYPE_RSA_SIGN = MBEDTLS_SSL_CERT_TYPE_RSA_SIGN;
enum SSL_CHANNEL_INBOUND = MBEDTLS_SSL_CHANNEL_INBOUND;
enum SSL_CHANNEL_OUTBOUND = MBEDTLS_SSL_CHANNEL_OUTBOUND;
enum SSL_CIPHERSUITES = MBEDTLS_SSL_CIPHERSUITES;
enum SSL_CLIENT_CERTIFICATE = MBEDTLS_SSL_CLIENT_CERTIFICATE;
enum SSL_CLIENT_CHANGE_CIPHER_SPEC = MBEDTLS_SSL_CLIENT_CHANGE_CIPHER_SPEC;
enum SSL_CLIENT_FINISHED = MBEDTLS_SSL_CLIENT_FINISHED;
enum SSL_CLIENT_HELLO = MBEDTLS_SSL_CLIENT_HELLO;
enum SSL_CLIENT_KEY_EXCHANGE = MBEDTLS_SSL_CLIENT_KEY_EXCHANGE;
enum SSL_COMPRESSION_ADD = MBEDTLS_SSL_COMPRESSION_ADD;
enum SSL_COMPRESS_DEFLATE = MBEDTLS_SSL_COMPRESS_DEFLATE;
enum SSL_COMPRESS_NULL = MBEDTLS_SSL_COMPRESS_NULL;
enum SSL_DEBUG_BUF = MBEDTLS_SSL_DEBUG_BUF;
enum SSL_DEBUG_CRT = MBEDTLS_SSL_DEBUG_CRT;
enum SSL_DEBUG_ECP = MBEDTLS_SSL_DEBUG_ECP;
enum SSL_DEBUG_MPI = MBEDTLS_SSL_DEBUG_MPI;
enum SSL_DEBUG_MSG = MBEDTLS_SSL_DEBUG_MSG;
enum SSL_DEBUG_RET = MBEDTLS_SSL_DEBUG_RET;
enum SSL_DEFAULT_TICKET_LIFETIME = MBEDTLS_SSL_DEFAULT_TICKET_LIFETIME;
enum SSL_DTLS_TIMEOUT_DFL_MAX = MBEDTLS_SSL_DTLS_TIMEOUT_DFL_MAX;
enum SSL_DTLS_TIMEOUT_DFL_MIN = MBEDTLS_SSL_DTLS_TIMEOUT_DFL_MIN;
enum SSL_EMPTY_RENEGOTIATION_INFO = MBEDTLS_SSL_EMPTY_RENEGOTIATION_INFO;
enum SSL_ETM_DISABLED = MBEDTLS_SSL_ETM_DISABLED;
enum SSL_ETM_ENABLED = MBEDTLS_SSL_ETM_ENABLED;
enum SSL_EXTENDED_MS_DISABLED = MBEDTLS_SSL_EXTENDED_MS_DISABLED;
enum SSL_EXTENDED_MS_ENABLED = MBEDTLS_SSL_EXTENDED_MS_ENABLED;
enum SSL_FALLBACK_SCSV = MBEDTLS_SSL_FALLBACK_SCSV;
enum SSL_FLUSH_BUFFERS = MBEDTLS_SSL_FLUSH_BUFFERS;
enum SSL_HANDSHAKE_OVER = MBEDTLS_SSL_HANDSHAKE_OVER;
enum SSL_HANDSHAKE_WRAPUP = MBEDTLS_SSL_HANDSHAKE_WRAPUP;
enum SSL_HASH_MD5 = MBEDTLS_SSL_HASH_MD5;
enum SSL_HASH_NONE = MBEDTLS_SSL_HASH_NONE;
enum SSL_HASH_SHA1 = MBEDTLS_SSL_HASH_SHA1;
enum SSL_HASH_SHA224 = MBEDTLS_SSL_HASH_SHA224;
enum SSL_HASH_SHA256 = MBEDTLS_SSL_HASH_SHA256;
enum SSL_HASH_SHA384 = MBEDTLS_SSL_HASH_SHA384;
enum SSL_HASH_SHA512 = MBEDTLS_SSL_HASH_SHA512;
enum SSL_HELLO_REQUEST = MBEDTLS_SSL_HELLO_REQUEST;
enum SSL_HS_CERTIFICATE = MBEDTLS_SSL_HS_CERTIFICATE;
enum SSL_HS_CERTIFICATE_REQUEST = MBEDTLS_SSL_HS_CERTIFICATE_REQUEST;
enum SSL_HS_CERTIFICATE_VERIFY = MBEDTLS_SSL_HS_CERTIFICATE_VERIFY;
enum SSL_HS_CLIENT_HELLO = MBEDTLS_SSL_HS_CLIENT_HELLO;
enum SSL_HS_CLIENT_KEY_EXCHANGE = MBEDTLS_SSL_HS_CLIENT_KEY_EXCHANGE;
enum SSL_HS_FINISHED = MBEDTLS_SSL_HS_FINISHED;
enum SSL_HS_HELLO_REQUEST = MBEDTLS_SSL_HS_HELLO_REQUEST;
enum SSL_HS_HELLO_VERIFY_REQUEST = MBEDTLS_SSL_HS_HELLO_VERIFY_REQUEST;
enum SSL_HS_NEW_SESSION_TICKET = MBEDTLS_SSL_HS_NEW_SESSION_TICKET;
enum SSL_HS_SERVER_HELLO = MBEDTLS_SSL_HS_SERVER_HELLO;
enum SSL_HS_SERVER_HELLO_DONE = MBEDTLS_SSL_HS_SERVER_HELLO_DONE;
enum SSL_HS_SERVER_KEY_EXCHANGE = MBEDTLS_SSL_HS_SERVER_KEY_EXCHANGE;
enum SSL_INITIAL_HANDSHAKE = MBEDTLS_SSL_INITIAL_HANDSHAKE;
enum SSL_IS_CLIENT = MBEDTLS_SSL_IS_CLIENT;
enum SSL_IS_FALLBACK = MBEDTLS_SSL_IS_FALLBACK;
enum SSL_IS_NOT_FALLBACK = MBEDTLS_SSL_IS_NOT_FALLBACK;
enum SSL_IS_SERVER = MBEDTLS_SSL_IS_SERVER;
enum SSL_LEGACY_ALLOW_RENEGOTIATION = MBEDTLS_SSL_LEGACY_ALLOW_RENEGOTIATION;
enum SSL_LEGACY_BREAK_HANDSHAKE = MBEDTLS_SSL_LEGACY_BREAK_HANDSHAKE;
enum SSL_LEGACY_NO_RENEGOTIATION = MBEDTLS_SSL_LEGACY_NO_RENEGOTIATION;
enum SSL_LEGACY_RENEGOTIATION = MBEDTLS_SSL_LEGACY_RENEGOTIATION;
enum SSL_MAC_ADD = MBEDTLS_SSL_MAC_ADD;
enum SSL_MAJOR_VERSION_3 = MBEDTLS_SSL_MAJOR_VERSION_3;
enum SSL_MAX_CONTENT_LEN = MBEDTLS_SSL_MAX_CONTENT_LEN;
enum SSL_MAX_FRAG_LEN_1024 = MBEDTLS_SSL_MAX_FRAG_LEN_1024;
enum SSL_MAX_FRAG_LEN_2048 = MBEDTLS_SSL_MAX_FRAG_LEN_2048;
enum SSL_MAX_FRAG_LEN_4096 = MBEDTLS_SSL_MAX_FRAG_LEN_4096;
enum SSL_MAX_FRAG_LEN_512 = MBEDTLS_SSL_MAX_FRAG_LEN_512;
enum SSL_MAX_FRAG_LEN_INVALID = MBEDTLS_SSL_MAX_FRAG_LEN_INVALID;
enum SSL_MAX_FRAG_LEN_NONE = MBEDTLS_SSL_MAX_FRAG_LEN_NONE;
enum SSL_MAX_MAJOR_VERSION = MBEDTLS_SSL_MAX_MAJOR_VERSION;
enum SSL_MAX_MINOR_VERSION = MBEDTLS_SSL_MAX_MINOR_VERSION;
enum SSL_MINOR_VERSION_0 = MBEDTLS_SSL_MINOR_VERSION_0;
enum SSL_MINOR_VERSION_1 = MBEDTLS_SSL_MINOR_VERSION_1;
enum SSL_MINOR_VERSION_2 = MBEDTLS_SSL_MINOR_VERSION_2;
enum SSL_MINOR_VERSION_3 = MBEDTLS_SSL_MINOR_VERSION_3;
enum SSL_MIN_MAJOR_VERSION = MBEDTLS_SSL_MIN_MAJOR_VERSION;
enum SSL_MIN_MINOR_VERSION = MBEDTLS_SSL_MIN_MINOR_VERSION;
enum SSL_MSG_ALERT = MBEDTLS_SSL_MSG_ALERT;
enum SSL_MSG_APPLICATION_DATA = MBEDTLS_SSL_MSG_APPLICATION_DATA;
enum SSL_MSG_CHANGE_CIPHER_SPEC = MBEDTLS_SSL_MSG_CHANGE_CIPHER_SPEC;
enum SSL_MSG_HANDSHAKE = MBEDTLS_SSL_MSG_HANDSHAKE;
enum SSL_PADDING_ADD = MBEDTLS_SSL_PADDING_ADD;
enum SSL_RENEGOTIATION = MBEDTLS_SSL_RENEGOTIATION;
enum SSL_RENEGOTIATION_DISABLED = MBEDTLS_SSL_RENEGOTIATION_DISABLED;
enum SSL_RENEGOTIATION_DONE = MBEDTLS_SSL_RENEGOTIATION_DONE;
enum SSL_RENEGOTIATION_ENABLED = MBEDTLS_SSL_RENEGOTIATION_ENABLED;
enum SSL_RENEGOTIATION_NOT_ENFORCED = MBEDTLS_SSL_RENEGOTIATION_NOT_ENFORCED;
enum SSL_RENEGOTIATION_PENDING = MBEDTLS_SSL_RENEGOTIATION_PENDING;
enum SSL_RENEGO_MAX_RECORDS_DEFAULT = MBEDTLS_SSL_RENEGO_MAX_RECORDS_DEFAULT;
enum SSL_RETRANS_FINISHED = MBEDTLS_SSL_RETRANS_FINISHED;
enum SSL_RETRANS_PREPARING = MBEDTLS_SSL_RETRANS_PREPARING;
enum SSL_RETRANS_SENDING = MBEDTLS_SSL_RETRANS_SENDING;
enum SSL_RETRANS_WAITING = MBEDTLS_SSL_RETRANS_WAITING;
enum SSL_SECURE_RENEGOTIATION = MBEDTLS_SSL_SECURE_RENEGOTIATION;
enum SSL_SERVER_CERTIFICATE = MBEDTLS_SSL_SERVER_CERTIFICATE;
enum SSL_SERVER_CHANGE_CIPHER_SPEC = MBEDTLS_SSL_SERVER_CHANGE_CIPHER_SPEC;
enum SSL_SERVER_FINISHED = MBEDTLS_SSL_SERVER_FINISHED;
enum SSL_SERVER_HELLO = MBEDTLS_SSL_SERVER_HELLO;
enum SSL_SERVER_HELLO_DONE = MBEDTLS_SSL_SERVER_HELLO_DONE;
enum SSL_SERVER_HELLO_VERIFY_REQUEST_SENT = MBEDTLS_SSL_SERVER_HELLO_VERIFY_REQUEST_SENT;
enum SSL_SERVER_KEY_EXCHANGE = MBEDTLS_SSL_SERVER_KEY_EXCHANGE;
enum SSL_SERVER_NEW_SESSION_TICKET = MBEDTLS_SSL_SERVER_NEW_SESSION_TICKET;
enum SSL_SESSION_TICKETS_DISABLED = MBEDTLS_SSL_SESSION_TICKETS_DISABLED;
enum SSL_SESSION_TICKETS_ENABLED = MBEDTLS_SSL_SESSION_TICKETS_ENABLED;
enum SSL_SIG_ANON = MBEDTLS_SSL_SIG_ANON;
enum SSL_SIG_ECDSA = MBEDTLS_SSL_SIG_ECDSA;
enum SSL_SIG_RSA = MBEDTLS_SSL_SIG_RSA;
enum SSL_TRANSPORT_DATAGRAM = MBEDTLS_SSL_TRANSPORT_DATAGRAM;
enum SSL_TRANSPORT_STREAM = MBEDTLS_SSL_TRANSPORT_STREAM;
enum SSL_TRUNCATED_HMAC_LEN = MBEDTLS_SSL_TRUNCATED_HMAC_LEN;
enum SSL_TRUNC_HMAC_DISABLED = MBEDTLS_SSL_TRUNC_HMAC_DISABLED;
enum SSL_TRUNC_HMAC_ENABLED = MBEDTLS_SSL_TRUNC_HMAC_ENABLED;
enum SSL_VERIFY_DATA_MAX_LEN = MBEDTLS_SSL_VERIFY_DATA_MAX_LEN;
enum SSL_VERIFY_NONE = MBEDTLS_SSL_VERIFY_NONE;
enum SSL_VERIFY_OPTIONAL = MBEDTLS_SSL_VERIFY_OPTIONAL;
enum SSL_VERIFY_REQUIRED = MBEDTLS_SSL_VERIFY_REQUIRED;
enum TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA = MBEDTLS_TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA;
enum TLS_DHE_PSK_WITH_AES_128_CBC_SHA = MBEDTLS_TLS_DHE_PSK_WITH_AES_128_CBC_SHA;
enum TLS_DHE_PSK_WITH_AES_128_CBC_SHA256 = MBEDTLS_TLS_DHE_PSK_WITH_AES_128_CBC_SHA256;
enum TLS_DHE_PSK_WITH_AES_128_CCM = MBEDTLS_TLS_DHE_PSK_WITH_AES_128_CCM;
enum TLS_DHE_PSK_WITH_AES_128_CCM_8 = MBEDTLS_TLS_DHE_PSK_WITH_AES_128_CCM_8;
enum TLS_DHE_PSK_WITH_AES_128_GCM_SHA256 = MBEDTLS_TLS_DHE_PSK_WITH_AES_128_GCM_SHA256;
enum TLS_DHE_PSK_WITH_AES_256_CBC_SHA = MBEDTLS_TLS_DHE_PSK_WITH_AES_256_CBC_SHA;
enum TLS_DHE_PSK_WITH_AES_256_CBC_SHA384 = MBEDTLS_TLS_DHE_PSK_WITH_AES_256_CBC_SHA384;
enum TLS_DHE_PSK_WITH_AES_256_CCM = MBEDTLS_TLS_DHE_PSK_WITH_AES_256_CCM;
enum TLS_DHE_PSK_WITH_AES_256_CCM_8 = MBEDTLS_TLS_DHE_PSK_WITH_AES_256_CCM_8;
enum TLS_DHE_PSK_WITH_AES_256_GCM_SHA384 = MBEDTLS_TLS_DHE_PSK_WITH_AES_256_GCM_SHA384;
enum TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256 = MBEDTLS_TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256;
enum TLS_DHE_PSK_WITH_CAMELLIA_128_GCM_SHA256 = MBEDTLS_TLS_DHE_PSK_WITH_CAMELLIA_128_GCM_SHA256;
enum TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384 = MBEDTLS_TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384;
enum TLS_DHE_PSK_WITH_CAMELLIA_256_GCM_SHA384 = MBEDTLS_TLS_DHE_PSK_WITH_CAMELLIA_256_GCM_SHA384;
enum TLS_DHE_PSK_WITH_NULL_SHA = MBEDTLS_TLS_DHE_PSK_WITH_NULL_SHA;
enum TLS_DHE_PSK_WITH_NULL_SHA256 = MBEDTLS_TLS_DHE_PSK_WITH_NULL_SHA256;
enum TLS_DHE_PSK_WITH_NULL_SHA384 = MBEDTLS_TLS_DHE_PSK_WITH_NULL_SHA384;
enum TLS_DHE_PSK_WITH_RC4_128_SHA = MBEDTLS_TLS_DHE_PSK_WITH_RC4_128_SHA;
enum TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA = MBEDTLS_TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA;
enum TLS_DHE_RSA_WITH_AES_128_CBC_SHA = MBEDTLS_TLS_DHE_RSA_WITH_AES_128_CBC_SHA;
enum TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 = MBEDTLS_TLS_DHE_RSA_WITH_AES_128_CBC_SHA256;
enum TLS_DHE_RSA_WITH_AES_128_CCM = MBEDTLS_TLS_DHE_RSA_WITH_AES_128_CCM;
enum TLS_DHE_RSA_WITH_AES_128_CCM_8 = MBEDTLS_TLS_DHE_RSA_WITH_AES_128_CCM_8;
enum TLS_DHE_RSA_WITH_AES_128_GCM_SHA256 = MBEDTLS_TLS_DHE_RSA_WITH_AES_128_GCM_SHA256;
enum TLS_DHE_RSA_WITH_AES_256_CBC_SHA = MBEDTLS_TLS_DHE_RSA_WITH_AES_256_CBC_SHA;
enum TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 = MBEDTLS_TLS_DHE_RSA_WITH_AES_256_CBC_SHA256;
enum TLS_DHE_RSA_WITH_AES_256_CCM = MBEDTLS_TLS_DHE_RSA_WITH_AES_256_CCM;
enum TLS_DHE_RSA_WITH_AES_256_CCM_8 = MBEDTLS_TLS_DHE_RSA_WITH_AES_256_CCM_8;
enum TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 = MBEDTLS_TLS_DHE_RSA_WITH_AES_256_GCM_SHA384;
enum TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA = MBEDTLS_TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA;
enum TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256 = MBEDTLS_TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256;
enum TLS_DHE_RSA_WITH_CAMELLIA_128_GCM_SHA256 = MBEDTLS_TLS_DHE_RSA_WITH_CAMELLIA_128_GCM_SHA256;
enum TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA = MBEDTLS_TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA;
enum TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256 = MBEDTLS_TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256;
enum TLS_DHE_RSA_WITH_CAMELLIA_256_GCM_SHA384 = MBEDTLS_TLS_DHE_RSA_WITH_CAMELLIA_256_GCM_SHA384;
enum TLS_DHE_RSA_WITH_DES_CBC_SHA = MBEDTLS_TLS_DHE_RSA_WITH_DES_CBC_SHA;
enum TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA = MBEDTLS_TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA;
enum TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA = MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA;
enum TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256 = MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256;
enum TLS_ECDHE_ECDSA_WITH_AES_128_CCM = MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_128_CCM;
enum TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8 = MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8;
enum TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 = MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256;
enum TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA = MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA;
enum TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384 = MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384;
enum TLS_ECDHE_ECDSA_WITH_AES_256_CCM = MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_256_CCM;
enum TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8 = MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8;
enum TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 = MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384;
enum TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256 = MBEDTLS_TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256;
enum TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_GCM_SHA256 = MBEDTLS_TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_GCM_SHA256;
enum TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384 = MBEDTLS_TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384;
enum TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_GCM_SHA384 = MBEDTLS_TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_GCM_SHA384;
enum TLS_ECDHE_ECDSA_WITH_NULL_SHA = MBEDTLS_TLS_ECDHE_ECDSA_WITH_NULL_SHA;
enum TLS_ECDHE_ECDSA_WITH_RC4_128_SHA = MBEDTLS_TLS_ECDHE_ECDSA_WITH_RC4_128_SHA;
enum TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA = MBEDTLS_TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA;
enum TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA = MBEDTLS_TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA;
enum TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256 = MBEDTLS_TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256;
enum TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA = MBEDTLS_TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA;
enum TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384 = MBEDTLS_TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384;
enum TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256 = MBEDTLS_TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256;
enum TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384 = MBEDTLS_TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384;
enum TLS_ECDHE_PSK_WITH_NULL_SHA = MBEDTLS_TLS_ECDHE_PSK_WITH_NULL_SHA;
enum TLS_ECDHE_PSK_WITH_NULL_SHA256 = MBEDTLS_TLS_ECDHE_PSK_WITH_NULL_SHA256;
enum TLS_ECDHE_PSK_WITH_NULL_SHA384 = MBEDTLS_TLS_ECDHE_PSK_WITH_NULL_SHA384;
enum TLS_ECDHE_PSK_WITH_RC4_128_SHA = MBEDTLS_TLS_ECDHE_PSK_WITH_RC4_128_SHA;
enum TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA = MBEDTLS_TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA;
enum TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA = MBEDTLS_TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA;
enum TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 = MBEDTLS_TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256;
enum TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 = MBEDTLS_TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256;
enum TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA = MBEDTLS_TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA;
enum TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384 = MBEDTLS_TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384;
enum TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 = MBEDTLS_TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384;
enum TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256 = MBEDTLS_TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256;
enum TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256 = MBEDTLS_TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256;
enum TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384 = MBEDTLS_TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384;
enum TLS_ECDHE_RSA_WITH_CAMELLIA_256_GCM_SHA384 = MBEDTLS_TLS_ECDHE_RSA_WITH_CAMELLIA_256_GCM_SHA384;
enum TLS_ECDHE_RSA_WITH_NULL_SHA = MBEDTLS_TLS_ECDHE_RSA_WITH_NULL_SHA;
enum TLS_ECDHE_RSA_WITH_RC4_128_SHA = MBEDTLS_TLS_ECDHE_RSA_WITH_RC4_128_SHA;
enum TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA = MBEDTLS_TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA;
enum TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA = MBEDTLS_TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA;
enum TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256 = MBEDTLS_TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256;
enum TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256 = MBEDTLS_TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256;
enum TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA = MBEDTLS_TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA;
enum TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384 = MBEDTLS_TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384;
enum TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384 = MBEDTLS_TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384;
enum TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256 = MBEDTLS_TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256;
enum TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256 = MBEDTLS_TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256;
enum TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384 = MBEDTLS_TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384;
enum TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384 = MBEDTLS_TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384;
enum TLS_ECDH_ECDSA_WITH_NULL_SHA = MBEDTLS_TLS_ECDH_ECDSA_WITH_NULL_SHA;
enum TLS_ECDH_ECDSA_WITH_RC4_128_SHA = MBEDTLS_TLS_ECDH_ECDSA_WITH_RC4_128_SHA;
enum TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA = MBEDTLS_TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA;
enum TLS_ECDH_RSA_WITH_AES_128_CBC_SHA = MBEDTLS_TLS_ECDH_RSA_WITH_AES_128_CBC_SHA;
enum TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256 = MBEDTLS_TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256;
enum TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256 = MBEDTLS_TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256;
enum TLS_ECDH_RSA_WITH_AES_256_CBC_SHA = MBEDTLS_TLS_ECDH_RSA_WITH_AES_256_CBC_SHA;
enum TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384 = MBEDTLS_TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384;
enum TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384 = MBEDTLS_TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384;
enum TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256 = MBEDTLS_TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256;
enum TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256 = MBEDTLS_TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256;
enum TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384 = MBEDTLS_TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384;
enum TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384 = MBEDTLS_TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384;
enum TLS_ECDH_RSA_WITH_NULL_SHA = MBEDTLS_TLS_ECDH_RSA_WITH_NULL_SHA;
enum TLS_ECDH_RSA_WITH_RC4_128_SHA = MBEDTLS_TLS_ECDH_RSA_WITH_RC4_128_SHA;
enum TLS_EXT_ALPN = MBEDTLS_TLS_EXT_ALPN;
enum TLS_EXT_ENCRYPT_THEN_MAC = MBEDTLS_TLS_EXT_ENCRYPT_THEN_MAC;
enum TLS_EXT_EXTENDED_MASTER_SECRET = MBEDTLS_TLS_EXT_EXTENDED_MASTER_SECRET;
enum TLS_EXT_MAX_FRAGMENT_LENGTH = MBEDTLS_TLS_EXT_MAX_FRAGMENT_LENGTH;
enum TLS_EXT_RENEGOTIATION_INFO = MBEDTLS_TLS_EXT_RENEGOTIATION_INFO;
enum TLS_EXT_SERVERNAME = MBEDTLS_TLS_EXT_SERVERNAME;
enum TLS_EXT_SERVERNAME_HOSTNAME = MBEDTLS_TLS_EXT_SERVERNAME_HOSTNAME;
enum TLS_EXT_SESSION_TICKET = MBEDTLS_TLS_EXT_SESSION_TICKET;
enum TLS_EXT_SIG_ALG = MBEDTLS_TLS_EXT_SIG_ALG;
enum TLS_EXT_SUPPORTED_ELLIPTIC_CURVES = MBEDTLS_TLS_EXT_SUPPORTED_ELLIPTIC_CURVES;
enum TLS_EXT_SUPPORTED_POINT_FORMATS = MBEDTLS_TLS_EXT_SUPPORTED_POINT_FORMATS;
enum TLS_EXT_SUPPORTED_POINT_FORMATS_PRESENT = MBEDTLS_TLS_EXT_SUPPORTED_POINT_FORMATS_PRESENT;
enum TLS_EXT_TRUNCATED_HMAC = MBEDTLS_TLS_EXT_TRUNCATED_HMAC;
enum TLS_PSK_WITH_3DES_EDE_CBC_SHA = MBEDTLS_TLS_PSK_WITH_3DES_EDE_CBC_SHA;
enum TLS_PSK_WITH_AES_128_CBC_SHA = MBEDTLS_TLS_PSK_WITH_AES_128_CBC_SHA;
enum TLS_PSK_WITH_AES_128_CBC_SHA256 = MBEDTLS_TLS_PSK_WITH_AES_128_CBC_SHA256;
enum TLS_PSK_WITH_AES_128_CCM = MBEDTLS_TLS_PSK_WITH_AES_128_CCM;
enum TLS_PSK_WITH_AES_128_CCM_8 = MBEDTLS_TLS_PSK_WITH_AES_128_CCM_8;
enum TLS_PSK_WITH_AES_128_GCM_SHA256 = MBEDTLS_TLS_PSK_WITH_AES_128_GCM_SHA256;
enum TLS_PSK_WITH_AES_256_CBC_SHA = MBEDTLS_TLS_PSK_WITH_AES_256_CBC_SHA;
enum TLS_PSK_WITH_AES_256_CBC_SHA384 = MBEDTLS_TLS_PSK_WITH_AES_256_CBC_SHA384;
enum TLS_PSK_WITH_AES_256_CCM = MBEDTLS_TLS_PSK_WITH_AES_256_CCM;
enum TLS_PSK_WITH_AES_256_CCM_8 = MBEDTLS_TLS_PSK_WITH_AES_256_CCM_8;
enum TLS_PSK_WITH_AES_256_GCM_SHA384 = MBEDTLS_TLS_PSK_WITH_AES_256_GCM_SHA384;
enum TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256 = MBEDTLS_TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256;
enum TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256 = MBEDTLS_TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256;
enum TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384 = MBEDTLS_TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384;
enum TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384 = MBEDTLS_TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384;
enum TLS_PSK_WITH_NULL_SHA = MBEDTLS_TLS_PSK_WITH_NULL_SHA;
enum TLS_PSK_WITH_NULL_SHA256 = MBEDTLS_TLS_PSK_WITH_NULL_SHA256;
enum TLS_PSK_WITH_NULL_SHA384 = MBEDTLS_TLS_PSK_WITH_NULL_SHA384;
enum TLS_PSK_WITH_RC4_128_SHA = MBEDTLS_TLS_PSK_WITH_RC4_128_SHA;
enum TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA = MBEDTLS_TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA;
enum TLS_RSA_PSK_WITH_AES_128_CBC_SHA = MBEDTLS_TLS_RSA_PSK_WITH_AES_128_CBC_SHA;
enum TLS_RSA_PSK_WITH_AES_128_CBC_SHA256 = MBEDTLS_TLS_RSA_PSK_WITH_AES_128_CBC_SHA256;
enum TLS_RSA_PSK_WITH_AES_128_GCM_SHA256 = MBEDTLS_TLS_RSA_PSK_WITH_AES_128_GCM_SHA256;
enum TLS_RSA_PSK_WITH_AES_256_CBC_SHA = MBEDTLS_TLS_RSA_PSK_WITH_AES_256_CBC_SHA;
enum TLS_RSA_PSK_WITH_AES_256_CBC_SHA384 = MBEDTLS_TLS_RSA_PSK_WITH_AES_256_CBC_SHA384;
enum TLS_RSA_PSK_WITH_AES_256_GCM_SHA384 = MBEDTLS_TLS_RSA_PSK_WITH_AES_256_GCM_SHA384;
enum TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256 = MBEDTLS_TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256;
enum TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256 = MBEDTLS_TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256;
enum TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384 = MBEDTLS_TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384;
enum TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384 = MBEDTLS_TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384;
enum TLS_RSA_PSK_WITH_NULL_SHA = MBEDTLS_TLS_RSA_PSK_WITH_NULL_SHA;
enum TLS_RSA_PSK_WITH_NULL_SHA256 = MBEDTLS_TLS_RSA_PSK_WITH_NULL_SHA256;
enum TLS_RSA_PSK_WITH_NULL_SHA384 = MBEDTLS_TLS_RSA_PSK_WITH_NULL_SHA384;
enum TLS_RSA_PSK_WITH_RC4_128_SHA = MBEDTLS_TLS_RSA_PSK_WITH_RC4_128_SHA;
enum TLS_RSA_WITH_3DES_EDE_CBC_SHA = MBEDTLS_TLS_RSA_WITH_3DES_EDE_CBC_SHA;
enum TLS_RSA_WITH_AES_128_CBC_SHA = MBEDTLS_TLS_RSA_WITH_AES_128_CBC_SHA;
enum TLS_RSA_WITH_AES_128_CBC_SHA256 = MBEDTLS_TLS_RSA_WITH_AES_128_CBC_SHA256;
enum TLS_RSA_WITH_AES_128_CCM = MBEDTLS_TLS_RSA_WITH_AES_128_CCM;
enum TLS_RSA_WITH_AES_128_CCM_8 = MBEDTLS_TLS_RSA_WITH_AES_128_CCM_8;
enum TLS_RSA_WITH_AES_128_GCM_SHA256 = MBEDTLS_TLS_RSA_WITH_AES_128_GCM_SHA256;
enum TLS_RSA_WITH_AES_256_CBC_SHA = MBEDTLS_TLS_RSA_WITH_AES_256_CBC_SHA;
enum TLS_RSA_WITH_AES_256_CBC_SHA256 = MBEDTLS_TLS_RSA_WITH_AES_256_CBC_SHA256;
enum TLS_RSA_WITH_AES_256_CCM = MBEDTLS_TLS_RSA_WITH_AES_256_CCM;
enum TLS_RSA_WITH_AES_256_CCM_8 = MBEDTLS_TLS_RSA_WITH_AES_256_CCM_8;
enum TLS_RSA_WITH_AES_256_GCM_SHA384 = MBEDTLS_TLS_RSA_WITH_AES_256_GCM_SHA384;
enum TLS_RSA_WITH_CAMELLIA_128_CBC_SHA = MBEDTLS_TLS_RSA_WITH_CAMELLIA_128_CBC_SHA;
enum TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256 = MBEDTLS_TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256;
enum TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256 = MBEDTLS_TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256;
enum TLS_RSA_WITH_CAMELLIA_256_CBC_SHA = MBEDTLS_TLS_RSA_WITH_CAMELLIA_256_CBC_SHA;
enum TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256 = MBEDTLS_TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256;
enum TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384 = MBEDTLS_TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384;
enum TLS_RSA_WITH_DES_CBC_SHA = MBEDTLS_TLS_RSA_WITH_DES_CBC_SHA;
enum TLS_RSA_WITH_NULL_MD5 = MBEDTLS_TLS_RSA_WITH_NULL_MD5;
enum TLS_RSA_WITH_NULL_SHA = MBEDTLS_TLS_RSA_WITH_NULL_SHA;
enum TLS_RSA_WITH_NULL_SHA256 = MBEDTLS_TLS_RSA_WITH_NULL_SHA256;
enum TLS_RSA_WITH_RC4_128_MD5 = MBEDTLS_TLS_RSA_WITH_RC4_128_MD5;
enum TLS_RSA_WITH_RC4_128_SHA = MBEDTLS_TLS_RSA_WITH_RC4_128_SHA;
enum X509_CRT_VERSION_1 = MBEDTLS_X509_CRT_VERSION_1;
enum X509_CRT_VERSION_2 = MBEDTLS_X509_CRT_VERSION_2;
enum X509_CRT_VERSION_3 = MBEDTLS_X509_CRT_VERSION_3;
enum X509_FORMAT_DER = MBEDTLS_X509_FORMAT_DER;
enum X509_FORMAT_PEM = MBEDTLS_X509_FORMAT_PEM;
enum X509_MAX_DN_NAME_SIZE = MBEDTLS_X509_MAX_DN_NAME_SIZE;
enum X509_RFC5280_MAX_SERIAL_LEN = MBEDTLS_X509_RFC5280_MAX_SERIAL_LEN;
enum X509_RFC5280_UTC_TIME_LEN = MBEDTLS_X509_RFC5280_UTC_TIME_LEN;
enum XTEA_DECRYPT = MBEDTLS_XTEA_DECRYPT;
enum XTEA_ENCRYPT = MBEDTLS_XTEA_ENCRYPT;
enum _asn1_bitstring = mbedtls_asn1_bitstring;
enum _asn1_buf = mbedtls_asn1_buf;
enum _asn1_named_data = mbedtls_asn1_named_data;
enum _asn1_sequence = mbedtls_asn1_sequence;
enum _ssl_cache_context = mbedtls_ssl_cache_context;
enum _ssl_cache_entry = mbedtls_ssl_cache_entry;
enum _ssl_ciphersuite_t = mbedtls_ssl_ciphersuite_t;
enum _ssl_context = mbedtls_ssl_context;
enum _ssl_flight_item = mbedtls_ssl_flight_item;
enum _ssl_handshake_params = mbedtls_ssl_handshake_params;
enum _ssl_key_cert = mbedtls_ssl_key_cert;
enum _ssl_premaster_secret = mbedtls_ssl_premaster_secret;
enum _ssl_session = mbedtls_ssl_session;
enum _ssl_transform = mbedtls_ssl_transform;
enum _x509_crl = mbedtls_x509_crl;
enum _x509_crl_entry = mbedtls_x509_crl_entry;
enum _x509_crt = mbedtls_x509_crt;
enum _x509_csr = mbedtls_x509_csr;
enum _x509_time = mbedtls_x509_time;
enum _x509write_cert = mbedtls_x509write_cert;
enum _x509write_csr = mbedtls_x509write_csr;
enum aes_context = mbedtls_aes_context;
enum aes_crypt_cbc = mbedtls_aes_crypt_cbc;
enum aes_crypt_cfb128 = mbedtls_aes_crypt_cfb128;
enum aes_crypt_cfb8 = mbedtls_aes_crypt_cfb8;
enum aes_crypt_ctr = mbedtls_aes_crypt_ctr;
enum aes_crypt_ecb = mbedtls_aes_crypt_ecb;
enum aes_free = mbedtls_aes_free;
enum aes_init = mbedtls_aes_init;
enum aes_self_test = mbedtls_aes_self_test;
enum aes_setkey_dec = mbedtls_aes_setkey_dec;
enum aes_setkey_enc = mbedtls_aes_setkey_enc;
enum aesni_crypt_ecb = mbedtls_aesni_crypt_ecb;
enum aesni_gcm_mult = mbedtls_aesni_gcm_mult;
enum aesni_inverse_key = mbedtls_aesni_inverse_key;
enum aesni_setkey_enc = mbedtls_aesni_setkey_enc;
enum aesni_supports = mbedtls_aesni_has_support;
enum alarmed = mbedtls_timing_alarmed;
enum arc4_context = mbedtls_arc4_context;
enum arc4_crypt = mbedtls_arc4_crypt;
enum arc4_free = mbedtls_arc4_free;
enum arc4_init = mbedtls_arc4_init;
enum arc4_self_test = mbedtls_arc4_self_test;
enum arc4_setup = mbedtls_arc4_setup;
enum asn1_bitstring = mbedtls_asn1_bitstring;
enum asn1_buf = mbedtls_asn1_buf;
enum asn1_find_named_data = mbedtls_asn1_find_named_data;
enum asn1_free_named_data = mbedtls_asn1_free_named_data;
enum asn1_free_named_data_list = mbedtls_asn1_free_named_data_list;
enum asn1_get_alg = mbedtls_asn1_get_alg;
enum asn1_get_alg_null = mbedtls_asn1_get_alg_null;
enum asn1_get_bitstring = mbedtls_asn1_get_bitstring;
enum asn1_get_bitstring_null = mbedtls_asn1_get_bitstring_null;
enum asn1_get_bool = mbedtls_asn1_get_bool;
enum asn1_get_int = mbedtls_asn1_get_int;
enum asn1_get_len = mbedtls_asn1_get_len;
enum asn1_get_mpi = mbedtls_asn1_get_mpi;
enum asn1_get_sequence_of = mbedtls_asn1_get_sequence_of;
enum asn1_get_tag = mbedtls_asn1_get_tag;
enum asn1_named_data = mbedtls_asn1_named_data;
enum asn1_sequence = mbedtls_asn1_sequence;
enum asn1_store_named_data = mbedtls_asn1_store_named_data;
enum asn1_write_algorithm_identifier = mbedtls_asn1_write_algorithm_identifier;
enum asn1_write_bitstring = mbedtls_asn1_write_bitstring;
enum asn1_write_bool = mbedtls_asn1_write_bool;
enum asn1_write_ia5_string = mbedtls_asn1_write_ia5_string;
enum asn1_write_int = mbedtls_asn1_write_int;
enum asn1_write_len = mbedtls_asn1_write_len;
enum asn1_write_mpi = mbedtls_asn1_write_mpi;
enum asn1_write_null = mbedtls_asn1_write_null;
enum asn1_write_octet_string = mbedtls_asn1_write_octet_string;
enum asn1_write_oid = mbedtls_asn1_write_oid;
enum asn1_write_printable_string = mbedtls_asn1_write_printable_string;
enum asn1_write_raw_buffer = mbedtls_asn1_write_raw_buffer;
enum asn1_write_tag = mbedtls_asn1_write_tag;
enum base64_decode = mbedtls_base64_decode;
enum base64_encode = mbedtls_base64_encode;
enum base64_self_test = mbedtls_base64_self_test;
enum blowfish_context = mbedtls_blowfish_context;
enum blowfish_crypt_cbc = mbedtls_blowfish_crypt_cbc;
enum blowfish_crypt_cfb64 = mbedtls_blowfish_crypt_cfb64;
enum blowfish_crypt_ctr = mbedtls_blowfish_crypt_ctr;
enum blowfish_crypt_ecb = mbedtls_blowfish_crypt_ecb;
enum blowfish_free = mbedtls_blowfish_free;
enum blowfish_init = mbedtls_blowfish_init;
enum blowfish_setkey = mbedtls_blowfish_setkey;
enum camellia_context = mbedtls_camellia_context;
enum camellia_crypt_cbc = mbedtls_camellia_crypt_cbc;
enum camellia_crypt_cfb128 = mbedtls_camellia_crypt_cfb128;
enum camellia_crypt_ctr = mbedtls_camellia_crypt_ctr;
enum camellia_crypt_ecb = mbedtls_camellia_crypt_ecb;
enum camellia_free = mbedtls_camellia_free;
enum camellia_init = mbedtls_camellia_init;
enum camellia_self_test = mbedtls_camellia_self_test;
enum camellia_setkey_dec = mbedtls_camellia_setkey_dec;
enum camellia_setkey_enc = mbedtls_camellia_setkey_enc;
enum ccm_auth_decrypt = mbedtls_ccm_auth_decrypt;
enum ccm_context = mbedtls_ccm_context;
enum ccm_encrypt_and_tag = mbedtls_ccm_encrypt_and_tag;
enum ccm_free = mbedtls_ccm_free;
enum ccm_init = mbedtls_ccm_init;
enum ccm_self_test = mbedtls_ccm_self_test;
enum cipher_auth_decrypt = mbedtls_cipher_auth_decrypt;
enum cipher_auth_encrypt = mbedtls_cipher_auth_encrypt;
enum cipher_base_t = mbedtls_cipher_base_t;
enum cipher_check_tag = mbedtls_cipher_check_tag;
enum cipher_context_t = mbedtls_cipher_context_t;
enum cipher_crypt = mbedtls_cipher_crypt;
enum cipher_definition_t = mbedtls_cipher_definition_t;
enum cipher_definitions = mbedtls_cipher_definitions;
enum cipher_finish = mbedtls_cipher_finish;
enum cipher_free = mbedtls_cipher_free;
enum cipher_get_block_size = mbedtls_cipher_get_block_size;
enum cipher_get_cipher_mode = mbedtls_cipher_get_cipher_mode;
enum cipher_get_iv_size = mbedtls_cipher_get_iv_size;
enum cipher_get_key_size = mbedtls_cipher_get_key_bitlen;
enum cipher_get_name = mbedtls_cipher_get_name;
enum cipher_get_operation = mbedtls_cipher_get_operation;
enum cipher_get_type = mbedtls_cipher_get_type;
enum cipher_id_t = mbedtls_cipher_id_t;
enum cipher_info_from_string = mbedtls_cipher_info_from_string;
enum cipher_info_from_type = mbedtls_cipher_info_from_type;
enum cipher_info_from_values = mbedtls_cipher_info_from_values;
enum cipher_info_t = mbedtls_cipher_info_t;
enum cipher_init = mbedtls_cipher_init;
enum cipher_init_ctx = mbedtls_cipher_setup;
enum cipher_list = mbedtls_cipher_list;
enum cipher_mode_t = mbedtls_cipher_mode_t;
enum cipher_padding_t = mbedtls_cipher_padding_t;
enum cipher_reset = mbedtls_cipher_reset;
enum cipher_set_iv = mbedtls_cipher_set_iv;
enum cipher_set_padding_mode = mbedtls_cipher_set_padding_mode;
enum cipher_setkey = mbedtls_cipher_setkey;
enum cipher_type_t = mbedtls_cipher_type_t;
enum cipher_update = mbedtls_cipher_update;
enum cipher_update_ad = mbedtls_cipher_update_ad;
enum cipher_write_tag = mbedtls_cipher_write_tag;
enum ctr_drbg_context = mbedtls_ctr_drbg_context;
enum ctr_drbg_free = mbedtls_ctr_drbg_free;
enum ctr_drbg_init = mbedtls_ctr_drbg_init;
enum ctr_drbg_random = mbedtls_ctr_drbg_random;
enum ctr_drbg_random_with_add = mbedtls_ctr_drbg_random_with_add;
enum ctr_drbg_reseed = mbedtls_ctr_drbg_reseed;
enum ctr_drbg_self_test = mbedtls_ctr_drbg_self_test;
enum ctr_drbg_set_entropy_len = mbedtls_ctr_drbg_set_entropy_len;
enum ctr_drbg_set_prediction_resistance = mbedtls_ctr_drbg_set_prediction_resistance;
enum ctr_drbg_set_reseed_interval = mbedtls_ctr_drbg_set_reseed_interval;
enum ctr_drbg_update = mbedtls_ctr_drbg_update;
enum ctr_drbg_update_seed_file = mbedtls_ctr_drbg_update_seed_file;
enum ctr_drbg_write_seed_file = mbedtls_ctr_drbg_write_seed_file;
enum debug_print_buf = mbedtls_debug_print_buf;
enum debug_print_crt = mbedtls_debug_print_crt;
enum debug_print_ecp = mbedtls_debug_print_ecp;
enum debug_print_mpi = mbedtls_debug_print_mpi;
enum debug_print_msg = mbedtls_debug_print_msg;
enum debug_print_ret = mbedtls_debug_print_ret;
enum debug_set_threshold = mbedtls_debug_set_threshold;
enum des3_context = mbedtls_des3_context;
enum des3_crypt_cbc = mbedtls_des3_crypt_cbc;
enum des3_crypt_ecb = mbedtls_des3_crypt_ecb;
enum des3_free = mbedtls_des3_free;
enum des3_init = mbedtls_des3_init;
enum des3_set2key_dec = mbedtls_des3_set2key_dec;
enum des3_set2key_enc = mbedtls_des3_set2key_enc;
enum des3_set3key_dec = mbedtls_des3_set3key_dec;
enum des3_set3key_enc = mbedtls_des3_set3key_enc;
enum des_context = mbedtls_des_context;
enum des_crypt_cbc = mbedtls_des_crypt_cbc;
enum des_crypt_ecb = mbedtls_des_crypt_ecb;
enum des_free = mbedtls_des_free;
enum des_init = mbedtls_des_init;
enum des_key_check_key_parity = mbedtls_des_key_check_key_parity;
enum des_key_check_weak = mbedtls_des_key_check_weak;
enum des_key_set_parity = mbedtls_des_key_set_parity;
enum des_self_test = mbedtls_des_self_test;
enum des_setkey_dec = mbedtls_des_setkey_dec;
enum des_setkey_enc = mbedtls_des_setkey_enc;
enum dhm_calc_secret = mbedtls_dhm_calc_secret;
enum dhm_context = mbedtls_dhm_context;
enum dhm_free = mbedtls_dhm_free;
enum dhm_init = mbedtls_dhm_init;
enum dhm_make_params = mbedtls_dhm_make_params;
enum dhm_make_public = mbedtls_dhm_make_public;
enum dhm_parse_dhm = mbedtls_dhm_parse_dhm;
enum dhm_parse_dhmfile = mbedtls_dhm_parse_dhmfile;
enum dhm_read_params = mbedtls_dhm_read_params;
enum dhm_read_public = mbedtls_dhm_read_public;
enum dhm_self_test = mbedtls_dhm_self_test;
enum ecdh_calc_secret = mbedtls_ecdh_calc_secret;
enum ecdh_compute_shared = mbedtls_ecdh_compute_shared;
enum ecdh_context = mbedtls_ecdh_context;
enum ecdh_free = mbedtls_ecdh_free;
enum ecdh_gen_public = mbedtls_ecdh_gen_public;
enum ecdh_get_params = mbedtls_ecdh_get_params;
enum ecdh_init = mbedtls_ecdh_init;
enum ecdh_make_params = mbedtls_ecdh_make_params;
enum ecdh_make_public = mbedtls_ecdh_make_public;
enum ecdh_read_params = mbedtls_ecdh_read_params;
enum ecdh_read_public = mbedtls_ecdh_read_public;
enum ecdh_side = mbedtls_ecdh_side;
enum ecdsa_context = mbedtls_ecdsa_context;
enum ecdsa_free = mbedtls_ecdsa_free;
enum ecdsa_from_keypair = mbedtls_ecdsa_from_keypair;
enum ecdsa_genkey = mbedtls_ecdsa_genkey;
enum ecdsa_info = mbedtls_ecdsa_info;
enum ecdsa_init = mbedtls_ecdsa_init;
enum ecdsa_read_signature = mbedtls_ecdsa_read_signature;
enum ecdsa_sign = mbedtls_ecdsa_sign;
enum ecdsa_sign_det = mbedtls_ecdsa_sign_det;
enum ecdsa_verify = mbedtls_ecdsa_verify;
enum ecdsa_write_signature = mbedtls_ecdsa_write_signature;
enum ecdsa_write_signature_det = mbedtls_ecdsa_write_signature_det;
enum eckey_info = mbedtls_eckey_info;
enum eckeydh_info = mbedtls_eckeydh_info;
enum ecp_check_privkey = mbedtls_ecp_check_privkey;
enum ecp_check_pub_priv = mbedtls_ecp_check_pub_priv;
enum ecp_check_pubkey = mbedtls_ecp_check_pubkey;
enum ecp_copy = mbedtls_ecp_copy;
enum ecp_curve_info = mbedtls_ecp_curve_info;
enum ecp_curve_info_from_grp_id = mbedtls_ecp_curve_info_from_grp_id;
enum ecp_curve_info_from_name = mbedtls_ecp_curve_info_from_name;
enum ecp_curve_info_from_tls_id = mbedtls_ecp_curve_info_from_tls_id;
enum ecp_curve_list = mbedtls_ecp_curve_list;
enum ecp_gen_key = mbedtls_ecp_gen_key;
enum ecp_gen_keypair = mbedtls_ecp_gen_keypair;
enum ecp_group = mbedtls_ecp_group;
enum ecp_group_copy = mbedtls_ecp_group_copy;
enum ecp_group_free = mbedtls_ecp_group_free;
enum ecp_group_id = mbedtls_ecp_group_id;
enum ecp_group_init = mbedtls_ecp_group_init;
enum ecp_grp_id_list = mbedtls_ecp_grp_id_list;
enum ecp_is_zero = mbedtls_ecp_is_zero;
enum ecp_keypair = mbedtls_ecp_keypair;
enum ecp_keypair_free = mbedtls_ecp_keypair_free;
enum ecp_keypair_init = mbedtls_ecp_keypair_init;
enum ecp_mul = mbedtls_ecp_mul;
enum ecp_point = mbedtls_ecp_point;
enum ecp_point_free = mbedtls_ecp_point_free;
enum ecp_point_init = mbedtls_ecp_point_init;
enum ecp_point_read_binary = mbedtls_ecp_point_read_binary;
enum ecp_point_read_string = mbedtls_ecp_point_read_string;
enum ecp_point_write_binary = mbedtls_ecp_point_write_binary;
enum ecp_self_test = mbedtls_ecp_self_test;
enum ecp_set_zero = mbedtls_ecp_set_zero;
enum ecp_tls_read_group = mbedtls_ecp_tls_read_group;
enum ecp_tls_read_point = mbedtls_ecp_tls_read_point;
enum ecp_tls_write_group = mbedtls_ecp_tls_write_group;
enum ecp_tls_write_point = mbedtls_ecp_tls_write_point;
enum ecp_use_known_dp = mbedtls_ecp_group_load;
enum entropy_add_source = mbedtls_entropy_add_source;
enum entropy_context = mbedtls_entropy_context;
enum entropy_free = mbedtls_entropy_free;
enum entropy_func = mbedtls_entropy_func;
enum entropy_gather = mbedtls_entropy_gather;
enum entropy_init = mbedtls_entropy_init;
enum entropy_self_test = mbedtls_entropy_self_test;
enum entropy_update_manual = mbedtls_entropy_update_manual;
enum entropy_update_seed_file = mbedtls_entropy_update_seed_file;
enum entropy_write_seed_file = mbedtls_entropy_write_seed_file;
enum error_strerror = mbedtls_strerror;
enum f_source_ptr = mbedtls_entropy_f_source_ptr;
enum gcm_auth_decrypt = mbedtls_gcm_auth_decrypt;
enum gcm_context = mbedtls_gcm_context;
enum gcm_crypt_and_tag = mbedtls_gcm_crypt_and_tag;
enum gcm_finish = mbedtls_gcm_finish;
enum gcm_free = mbedtls_gcm_free;
enum gcm_init = mbedtls_gcm_init;
enum gcm_self_test = mbedtls_gcm_self_test;
enum gcm_starts = mbedtls_gcm_starts;
enum gcm_update = mbedtls_gcm_update;
enum get_timer = mbedtls_timing_get_timer;
enum hardclock = mbedtls_timing_hardclock;
enum hardclock_poll = mbedtls_hardclock_poll;
enum havege_free = mbedtls_havege_free;
enum havege_init = mbedtls_havege_init;
enum havege_poll = mbedtls_havege_poll;
enum havege_random = mbedtls_havege_random;
enum havege_state = mbedtls_havege_state;
enum hmac_drbg_context = mbedtls_hmac_drbg_context;
enum hmac_drbg_free = mbedtls_hmac_drbg_free;
enum hmac_drbg_init = mbedtls_hmac_drbg_init;
enum hmac_drbg_random = mbedtls_hmac_drbg_random;
enum hmac_drbg_random_with_add = mbedtls_hmac_drbg_random_with_add;
enum hmac_drbg_reseed = mbedtls_hmac_drbg_reseed;
enum hmac_drbg_self_test = mbedtls_hmac_drbg_self_test;
enum hmac_drbg_set_entropy_len = mbedtls_hmac_drbg_set_entropy_len;
enum hmac_drbg_set_prediction_resistance = mbedtls_hmac_drbg_set_prediction_resistance;
enum hmac_drbg_set_reseed_interval = mbedtls_hmac_drbg_set_reseed_interval;
enum hmac_drbg_update = mbedtls_hmac_drbg_update;
enum hmac_drbg_update_seed_file = mbedtls_hmac_drbg_update_seed_file;
enum hmac_drbg_write_seed_file = mbedtls_hmac_drbg_write_seed_file;
enum hr_time = mbedtls_timing_hr_time;
enum key_exchange_type_t = mbedtls_key_exchange_type_t;
enum md = mbedtls_md;
enum md2 = mbedtls_md2;
enum md2_context = mbedtls_md2_context;
enum md2_finish = mbedtls_md2_finish;
enum md2_free = mbedtls_md2_free;
enum md2_info = mbedtls_md2_info;
enum md2_init = mbedtls_md2_init;
enum md2_process = mbedtls_md2_process;
enum md2_self_test = mbedtls_md2_self_test;
enum md2_starts = mbedtls_md2_starts;
enum md2_update = mbedtls_md2_update;
enum md4 = mbedtls_md4;
enum md4_context = mbedtls_md4_context;
enum md4_finish = mbedtls_md4_finish;
enum md4_free = mbedtls_md4_free;
enum md4_info = mbedtls_md4_info;
enum md4_init = mbedtls_md4_init;
enum md4_process = mbedtls_md4_process;
enum md4_self_test = mbedtls_md4_self_test;
enum md4_starts = mbedtls_md4_starts;
enum md4_update = mbedtls_md4_update;
enum md5 = mbedtls_md5;
enum md5_context = mbedtls_md5_context;
enum md5_finish = mbedtls_md5_finish;
enum md5_free = mbedtls_md5_free;
enum md5_info = mbedtls_md5_info;
enum md5_init = mbedtls_md5_init;
enum md5_process = mbedtls_md5_process;
enum md5_self_test = mbedtls_md5_self_test;
enum md5_starts = mbedtls_md5_starts;
enum md5_update = mbedtls_md5_update;
enum md_context_t = mbedtls_md_context_t;
enum md_file = mbedtls_md_file;
enum md_finish = mbedtls_md_finish;
enum md_free = mbedtls_md_free;
enum md_get_name = mbedtls_md_get_name;
enum md_get_size = mbedtls_md_get_size;
enum md_get_type = mbedtls_md_get_type;
enum md_hmac = mbedtls_md_hmac;
enum md_hmac_finish = mbedtls_md_hmac_finish;
enum md_hmac_reset = mbedtls_md_hmac_reset;
enum md_hmac_starts = mbedtls_md_hmac_starts;
enum md_hmac_update = mbedtls_md_hmac_update;
enum md_info_from_string = mbedtls_md_info_from_string;
enum md_info_from_type = mbedtls_md_info_from_type;
enum md_info_t = mbedtls_md_info_t;
enum md_init = mbedtls_md_init;
enum md_init_ctx = mbedtls_md_init_ctx;
enum md_list = mbedtls_md_list;
enum md_process = mbedtls_md_process;
enum md_starts = mbedtls_md_starts;
enum md_type_t = mbedtls_md_type_t;
enum md_update = mbedtls_md_update;
enum memory_buffer_alloc_cur_get = mbedtls_memory_buffer_alloc_cur_get;
enum memory_buffer_alloc_free = mbedtls_memory_buffer_alloc_free;
enum memory_buffer_alloc_init = mbedtls_memory_buffer_alloc_init;
enum memory_buffer_alloc_max_get = mbedtls_memory_buffer_alloc_max_get;
enum memory_buffer_alloc_max_reset = mbedtls_memory_buffer_alloc_max_reset;
enum memory_buffer_alloc_self_test = mbedtls_memory_buffer_alloc_self_test;
enum memory_buffer_alloc_status = mbedtls_memory_buffer_alloc_status;
enum memory_buffer_alloc_verify = mbedtls_memory_buffer_alloc_verify;
enum memory_buffer_set_verify = mbedtls_memory_buffer_set_verify;
enum mpi = mbedtls_mpi;
enum mpi_add_abs = mbedtls_mpi_add_abs;
enum mpi_add_int = mbedtls_mpi_add_int;
enum mpi_add_mpi = mbedtls_mpi_add_mpi;
enum mpi_cmp_abs = mbedtls_mpi_cmp_abs;
enum mpi_cmp_int = mbedtls_mpi_cmp_int;
enum mpi_cmp_mpi = mbedtls_mpi_cmp_mpi;
enum mpi_copy = mbedtls_mpi_copy;
enum mpi_div_int = mbedtls_mpi_div_int;
enum mpi_div_mpi = mbedtls_mpi_div_mpi;
enum mpi_exp_mod = mbedtls_mpi_exp_mod;
enum mpi_fill_random = mbedtls_mpi_fill_random;
enum mpi_free = mbedtls_mpi_free;
enum mpi_gcd = mbedtls_mpi_gcd;
enum mpi_gen_prime = mbedtls_mpi_gen_prime;
enum mpi_get_bit = mbedtls_mpi_get_bit;
enum mpi_grow = mbedtls_mpi_grow;
enum mpi_init = mbedtls_mpi_init;
enum mpi_inv_mod = mbedtls_mpi_inv_mod;
enum mpi_is_prime = mbedtls_mpi_is_prime;
enum mpi_lsb = mbedtls_mpi_lsb;
enum mpi_lset = mbedtls_mpi_lset;
enum mpi_mod_int = mbedtls_mpi_mod_int;
enum mpi_mod_mpi = mbedtls_mpi_mod_mpi;
enum mpi_msb = mbedtls_mpi_bitlen;
enum mpi_mul_int = mbedtls_mpi_mul_int;
enum mpi_mul_mpi = mbedtls_mpi_mul_mpi;
enum mpi_read_binary = mbedtls_mpi_read_binary;
enum mpi_read_file = mbedtls_mpi_read_file;
enum mpi_read_string = mbedtls_mpi_read_string;
enum mpi_safe_cond_assign = mbedtls_mpi_safe_cond_assign;
enum mpi_safe_cond_swap = mbedtls_mpi_safe_cond_swap;
enum mpi_self_test = mbedtls_mpi_self_test;
enum mpi_set_bit = mbedtls_mpi_set_bit;
enum mpi_shift_l = mbedtls_mpi_shift_l;
enum mpi_shift_r = mbedtls_mpi_shift_r;
enum mpi_shrink = mbedtls_mpi_shrink;
enum mpi_size = mbedtls_mpi_size;
enum mpi_sub_abs = mbedtls_mpi_sub_abs;
enum mpi_sub_int = mbedtls_mpi_sub_int;
enum mpi_sub_mpi = mbedtls_mpi_sub_mpi;
enum mpi_swap = mbedtls_mpi_swap;
enum mpi_write_binary = mbedtls_mpi_write_binary;
enum mpi_write_file = mbedtls_mpi_write_file;
enum mpi_write_string = mbedtls_mpi_write_string;
enum net_accept = mbedtls_net_accept;
enum net_bind = mbedtls_net_bind;
enum net_close = mbedtls_net_free;
enum net_connect = mbedtls_net_connect;
enum net_recv = mbedtls_net_recv;
enum net_recv_timeout = mbedtls_net_recv_timeout;
enum net_send = mbedtls_net_send;
enum net_set_block = mbedtls_net_set_block;
enum net_set_nonblock = mbedtls_net_set_nonblock;
enum net_usleep = mbedtls_net_usleep;
enum oid_descriptor_t = mbedtls_oid_descriptor_t;
enum oid_get_attr_short_name = mbedtls_oid_get_attr_short_name;
enum oid_get_cipher_alg = mbedtls_oid_get_cipher_alg;
enum oid_get_ec_grp = mbedtls_oid_get_ec_grp;
enum oid_get_extended_key_usage = mbedtls_oid_get_extended_key_usage;
enum oid_get_md_alg = mbedtls_oid_get_md_alg;
enum oid_get_numeric_string = mbedtls_oid_get_numeric_string;
enum oid_get_oid_by_ec_grp = mbedtls_oid_get_oid_by_ec_grp;
enum oid_get_oid_by_md = mbedtls_oid_get_oid_by_md;
enum oid_get_oid_by_pk_alg = mbedtls_oid_get_oid_by_pk_alg;
enum oid_get_oid_by_sig_alg = mbedtls_oid_get_oid_by_sig_alg;
enum oid_get_pk_alg = mbedtls_oid_get_pk_alg;
enum oid_get_pkcs12_pbe_alg = mbedtls_oid_get_pkcs12_pbe_alg;
enum oid_get_sig_alg = mbedtls_oid_get_sig_alg;
enum oid_get_sig_alg_desc = mbedtls_oid_get_sig_alg_desc;
enum oid_get_x509_ext_type = mbedtls_oid_get_x509_ext_type;
enum operation_t = mbedtls_operation_t;
enum padlock_supports = mbedtls_padlock_has_support;
enum padlock_xcryptcbc = mbedtls_padlock_xcryptcbc;
enum padlock_xcryptecb = mbedtls_padlock_xcryptecb;
enum pem_context = mbedtls_pem_context;
enum pem_free = mbedtls_pem_free;
enum pem_init = mbedtls_pem_init;
enum pem_read_buffer = mbedtls_pem_read_buffer;
enum pem_write_buffer = mbedtls_pem_write_buffer;
enum pk_can_do = mbedtls_pk_can_do;
enum pk_check_pair = mbedtls_pk_check_pair;
enum pk_context = mbedtls_pk_context;
enum pk_debug = mbedtls_pk_debug;
enum pk_debug_item = mbedtls_pk_debug_item;
enum pk_debug_type = mbedtls_pk_debug_type;
enum pk_decrypt = mbedtls_pk_decrypt;
enum pk_ec = mbedtls_pk_ec;
enum pk_encrypt = mbedtls_pk_encrypt;
enum pk_free = mbedtls_pk_free;
enum pk_get_len = mbedtls_pk_get_len;
enum pk_get_name = mbedtls_pk_get_name;
enum pk_get_size = mbedtls_pk_get_bitlen;
enum pk_get_type = mbedtls_pk_get_type;
enum pk_info_from_type = mbedtls_pk_info_from_type;
enum pk_info_t = mbedtls_pk_info_t;
enum pk_init = mbedtls_pk_init;
enum pk_init_ctx = mbedtls_pk_setup;
enum pk_init_ctx_rsa_alt = mbedtls_pk_setup_rsa_alt;
enum pk_load_file = mbedtls_pk_load_file;
enum pk_parse_key = mbedtls_pk_parse_key;
enum pk_parse_keyfile = mbedtls_pk_parse_keyfile;
enum pk_parse_public_key = mbedtls_pk_parse_public_key;
enum pk_parse_public_keyfile = mbedtls_pk_parse_public_keyfile;
enum pk_parse_subpubkey = mbedtls_pk_parse_subpubkey;
enum pk_rsa = mbedtls_pk_rsa;
enum pk_rsa_alt_decrypt_func = mbedtls_pk_rsa_alt_decrypt_func;
enum pk_rsa_alt_key_len_func = mbedtls_pk_rsa_alt_key_len_func;
enum pk_rsa_alt_sign_func = mbedtls_pk_rsa_alt_sign_func;
enum pk_rsassa_pss_options = mbedtls_pk_rsassa_pss_options;
enum pk_sign = mbedtls_pk_sign;
enum pk_type_t = mbedtls_pk_type_t;
enum pk_verify = mbedtls_pk_verify;
enum pk_verify_ext = mbedtls_pk_verify_ext;
enum pk_write_key_der = mbedtls_pk_write_key_der;
enum pk_write_key_pem = mbedtls_pk_write_key_pem;
enum pk_write_pubkey = mbedtls_pk_write_pubkey;
enum pk_write_pubkey_der = mbedtls_pk_write_pubkey_der;
enum pk_write_pubkey_pem = mbedtls_pk_write_pubkey_pem;
enum pkcs11_context = mbedtls_pkcs11_context;
enum pkcs11_decrypt = mbedtls_pkcs11_decrypt;
enum pkcs11_priv_key_free = mbedtls_pkcs11_priv_key_free;
enum pkcs11_priv_key_init = mbedtls_pkcs11_priv_key_bind;
enum pkcs11_sign = mbedtls_pkcs11_sign;
enum pkcs11_x509_cert_init = mbedtls_pkcs11_x509_cert_bind;
enum pkcs12_derivation = mbedtls_pkcs12_derivation;
enum pkcs12_pbe = mbedtls_pkcs12_pbe;
enum pkcs12_pbe_sha1_rc4_128 = mbedtls_pkcs12_pbe_sha1_rc4_128;
enum pkcs5_pbes2 = mbedtls_pkcs5_pbes2;
enum pkcs5_pbkdf2_hmac = mbedtls_pkcs5_pbkdf2_hmac;
enum pkcs5_self_test = mbedtls_pkcs5_self_test;
enum platform_entropy_poll = mbedtls_platform_entropy_poll;
enum platform_set_exit = mbedtls_platform_set_exit;
enum platform_set_fprintf = mbedtls_platform_set_fprintf;
enum platform_set_printf = mbedtls_platform_set_printf;
enum platform_set_snprintf = mbedtls_platform_set_snprintf;
enum polarssl_exit = mbedtls_exit;
enum polarssl_fprintf = mbedtls_fprintf;
enum polarssl_free = mbedtls_free;
enum polarssl_mutex_free = mbedtls_mutex_free;
enum polarssl_mutex_init = mbedtls_mutex_init;
enum polarssl_mutex_lock = mbedtls_mutex_lock;
enum polarssl_mutex_unlock = mbedtls_mutex_unlock;
enum polarssl_printf = mbedtls_printf;
enum polarssl_snprintf = mbedtls_snprintf;
enum polarssl_strerror = mbedtls_strerror;
enum ripemd160 = mbedtls_ripemd160;
enum ripemd160_context = mbedtls_ripemd160_context;
enum ripemd160_finish = mbedtls_ripemd160_finish;
enum ripemd160_free = mbedtls_ripemd160_free;
enum ripemd160_info = mbedtls_ripemd160_info;
enum ripemd160_init = mbedtls_ripemd160_init;
enum ripemd160_process = mbedtls_ripemd160_process;
enum ripemd160_self_test = mbedtls_ripemd160_self_test;
enum ripemd160_starts = mbedtls_ripemd160_starts;
enum ripemd160_update = mbedtls_ripemd160_update;
enum rsa_alt_context = mbedtls_rsa_alt_context;
enum rsa_alt_info = mbedtls_rsa_alt_info;
enum rsa_check_privkey = mbedtls_rsa_check_privkey;
enum rsa_check_pub_priv = mbedtls_rsa_check_pub_priv;
enum rsa_check_pubkey = mbedtls_rsa_check_pubkey;
enum rsa_context = mbedtls_rsa_context;
enum rsa_copy = mbedtls_rsa_copy;
enum rsa_free = mbedtls_rsa_free;
enum rsa_gen_key = mbedtls_rsa_gen_key;
enum rsa_info = mbedtls_rsa_info;
enum rsa_init = mbedtls_rsa_init;
enum rsa_pkcs1_decrypt = mbedtls_rsa_pkcs1_decrypt;
enum rsa_pkcs1_encrypt = mbedtls_rsa_pkcs1_encrypt;
enum rsa_pkcs1_sign = mbedtls_rsa_pkcs1_sign;
enum rsa_pkcs1_verify = mbedtls_rsa_pkcs1_verify;
enum rsa_private = mbedtls_rsa_private;
enum rsa_public = mbedtls_rsa_public;
enum rsa_rsaes_oaep_decrypt = mbedtls_rsa_rsaes_oaep_decrypt;
enum rsa_rsaes_oaep_encrypt = mbedtls_rsa_rsaes_oaep_encrypt;
enum rsa_rsaes_pkcs1_v15_decrypt = mbedtls_rsa_rsaes_pkcs1_v15_decrypt;
enum rsa_rsaes_pkcs1_v15_encrypt = mbedtls_rsa_rsaes_pkcs1_v15_encrypt;
enum rsa_rsassa_pkcs1_v15_sign = mbedtls_rsa_rsassa_pkcs1_v15_sign;
enum rsa_rsassa_pkcs1_v15_verify = mbedtls_rsa_rsassa_pkcs1_v15_verify;
enum rsa_rsassa_pss_sign = mbedtls_rsa_rsassa_pss_sign;
enum rsa_rsassa_pss_verify = mbedtls_rsa_rsassa_pss_verify;
enum rsa_rsassa_pss_verify_ext = mbedtls_rsa_rsassa_pss_verify_ext;
enum rsa_self_test = mbedtls_rsa_self_test;
enum rsa_set_padding = mbedtls_rsa_set_padding;
enum safer_memcmp = mbedtls_ssl_safer_memcmp;
enum set_alarm = mbedtls_set_alarm;
enum sha1 = mbedtls_sha1;
enum sha1_context = mbedtls_sha1_context;
enum sha1_finish = mbedtls_sha1_finish;
enum sha1_free = mbedtls_sha1_free;
enum sha1_info = mbedtls_sha1_info;
enum sha1_init = mbedtls_sha1_init;
enum sha1_process = mbedtls_sha1_process;
enum sha1_self_test = mbedtls_sha1_self_test;
enum sha1_starts = mbedtls_sha1_starts;
enum sha1_update = mbedtls_sha1_update;
enum sha224_info = mbedtls_sha224_info;
enum sha256 = mbedtls_sha256;
enum sha256_context = mbedtls_sha256_context;
enum sha256_finish = mbedtls_sha256_finish;
enum sha256_free = mbedtls_sha256_free;
enum sha256_info = mbedtls_sha256_info;
enum sha256_init = mbedtls_sha256_init;
enum sha256_process = mbedtls_sha256_process;
enum sha256_self_test = mbedtls_sha256_self_test;
enum sha256_starts = mbedtls_sha256_starts;
enum sha256_update = mbedtls_sha256_update;
enum sha384_info = mbedtls_sha384_info;
enum sha512 = mbedtls_sha512;
enum sha512_context = mbedtls_sha512_context;
enum sha512_finish = mbedtls_sha512_finish;
enum sha512_free = mbedtls_sha512_free;
enum sha512_info = mbedtls_sha512_info;
enum sha512_init = mbedtls_sha512_init;
enum sha512_process = mbedtls_sha512_process;
enum sha512_self_test = mbedtls_sha512_self_test;
enum sha512_starts = mbedtls_sha512_starts;
enum sha512_update = mbedtls_sha512_update;
enum source_state = mbedtls_entropy_source_state;
enum ssl_cache_context = mbedtls_ssl_cache_context;
enum ssl_cache_entry = mbedtls_ssl_cache_entry;
enum ssl_cache_free = mbedtls_ssl_cache_free;
enum ssl_cache_get = mbedtls_ssl_cache_get;
enum ssl_cache_init = mbedtls_ssl_cache_init;
enum ssl_cache_set = mbedtls_ssl_cache_set;
enum ssl_cache_set_max_entries = mbedtls_ssl_cache_set_max_entries;
enum ssl_cache_set_timeout = mbedtls_ssl_cache_set_timeout;
enum ssl_check_cert_usage = mbedtls_ssl_check_cert_usage;
enum ssl_ciphersuite_from_id = mbedtls_ssl_ciphersuite_from_id;
enum ssl_ciphersuite_from_string = mbedtls_ssl_ciphersuite_from_string;
enum ssl_ciphersuite_t = mbedtls_ssl_ciphersuite_t;
enum ssl_ciphersuite_uses_ec = mbedtls_ssl_ciphersuite_uses_ec;
enum ssl_ciphersuite_uses_psk = mbedtls_ssl_ciphersuite_uses_psk;
enum ssl_close_notify = mbedtls_ssl_close_notify;
enum ssl_context = mbedtls_ssl_context;
enum ssl_cookie_check = mbedtls_ssl_cookie_check;
enum ssl_cookie_check_t = mbedtls_ssl_cookie_check_t;
enum ssl_cookie_ctx = mbedtls_ssl_cookie_ctx;
enum ssl_cookie_free = mbedtls_ssl_cookie_free;
enum ssl_cookie_init = mbedtls_ssl_cookie_init;
enum ssl_cookie_set_timeout = mbedtls_ssl_cookie_set_timeout;
enum ssl_cookie_setup = mbedtls_ssl_cookie_setup;
enum ssl_cookie_write = mbedtls_ssl_cookie_write;
enum ssl_cookie_write_t = mbedtls_ssl_cookie_write_t;
enum ssl_derive_keys = mbedtls_ssl_derive_keys;
enum ssl_dtls_replay_check = mbedtls_ssl_dtls_replay_check;
enum ssl_dtls_replay_update = mbedtls_ssl_dtls_replay_update;
enum ssl_fetch_input = mbedtls_ssl_fetch_input;
enum ssl_flight_item = mbedtls_ssl_flight_item;
enum ssl_flush_output = mbedtls_ssl_flush_output;
enum ssl_free = mbedtls_ssl_free;
enum ssl_get_alpn_protocol = mbedtls_ssl_get_alpn_protocol;
enum ssl_get_bytes_avail = mbedtls_ssl_get_bytes_avail;
enum ssl_get_ciphersuite = mbedtls_ssl_get_ciphersuite;
enum ssl_get_ciphersuite_id = mbedtls_ssl_get_ciphersuite_id;
enum ssl_get_ciphersuite_name = mbedtls_ssl_get_ciphersuite_name;
enum ssl_get_ciphersuite_sig_pk_alg = mbedtls_ssl_get_ciphersuite_sig_pk_alg;
enum ssl_get_peer_cert = mbedtls_ssl_get_peer_cert;
enum ssl_get_record_expansion = mbedtls_ssl_get_record_expansion;
enum ssl_get_session = mbedtls_ssl_get_session;
enum ssl_get_verify_result = mbedtls_ssl_get_verify_result;
enum ssl_get_version = mbedtls_ssl_get_version;
enum ssl_handshake = mbedtls_ssl_handshake;
enum ssl_handshake_client_step = mbedtls_ssl_handshake_client_step;
enum ssl_handshake_free = mbedtls_ssl_handshake_free;
enum ssl_handshake_params = mbedtls_ssl_handshake_params;
enum ssl_handshake_server_step = mbedtls_ssl_handshake_server_step;
enum ssl_handshake_step = mbedtls_ssl_handshake_step;
enum ssl_handshake_wrapup = mbedtls_ssl_handshake_wrapup;
enum ssl_hdr_len = mbedtls_ssl_hdr_len;
enum ssl_hs_hdr_len = mbedtls_ssl_hs_hdr_len;
enum ssl_hw_record_activate = mbedtls_ssl_hw_record_activate;
enum ssl_hw_record_finish = mbedtls_ssl_hw_record_finish;
enum ssl_hw_record_init = mbedtls_ssl_hw_record_init;
enum ssl_hw_record_read = mbedtls_ssl_hw_record_read;
enum ssl_hw_record_reset = mbedtls_ssl_hw_record_reset;
enum ssl_hw_record_write = mbedtls_ssl_hw_record_write;
enum ssl_init = mbedtls_ssl_init;
enum ssl_key_cert = mbedtls_ssl_key_cert;
enum ssl_legacy_renegotiation = mbedtls_ssl_conf_legacy_renegotiation;
enum ssl_list_ciphersuites = mbedtls_ssl_list_ciphersuites;
enum ssl_md_alg_from_hash = mbedtls_ssl_md_alg_from_hash;
enum ssl_optimize_checksum = mbedtls_ssl_optimize_checksum;
enum ssl_own_cert = mbedtls_ssl_own_cert;
enum ssl_own_key = mbedtls_ssl_own_key;
enum ssl_parse_certificate = mbedtls_ssl_parse_certificate;
enum ssl_parse_change_cipher_spec = mbedtls_ssl_parse_change_cipher_spec;
enum ssl_parse_finished = mbedtls_ssl_parse_finished;
enum ssl_pk_alg_from_sig = mbedtls_ssl_pk_alg_from_sig;
enum ssl_pkcs11_decrypt = mbedtls_ssl_pkcs11_decrypt;
enum ssl_pkcs11_key_len = mbedtls_ssl_pkcs11_key_len;
enum ssl_pkcs11_sign = mbedtls_ssl_pkcs11_sign;
enum ssl_psk_derive_premaster = mbedtls_ssl_psk_derive_premaster;
enum ssl_read = mbedtls_ssl_read;
enum ssl_read_record = mbedtls_ssl_read_record;
enum ssl_read_version = mbedtls_ssl_read_version;
enum ssl_recv_flight_completed = mbedtls_ssl_recv_flight_completed;
enum ssl_renegotiate = mbedtls_ssl_renegotiate;
enum ssl_resend = mbedtls_ssl_resend;
enum ssl_reset_checksum = mbedtls_ssl_reset_checksum;
enum ssl_send_alert_message = mbedtls_ssl_send_alert_message;
enum ssl_send_fatal_handshake_failure = mbedtls_ssl_send_fatal_handshake_failure;
enum ssl_send_flight_completed = mbedtls_ssl_send_flight_completed;
enum ssl_session = mbedtls_ssl_session;
enum ssl_session_free = mbedtls_ssl_session_free;
enum ssl_session_init = mbedtls_ssl_session_init;
enum ssl_session_reset = mbedtls_ssl_session_reset;
enum ssl_set_alpn_protocols = mbedtls_ssl_conf_alpn_protocols;
enum ssl_set_arc4_support = mbedtls_ssl_conf_arc4_support;
enum ssl_set_authmode = mbedtls_ssl_conf_authmode;
enum ssl_set_bio = mbedtls_ssl_set_bio;
enum ssl_set_ca_chain = mbedtls_ssl_conf_ca_chain;
enum ssl_set_cbc_record_splitting = mbedtls_ssl_conf_cbc_record_splitting;
enum ssl_set_ciphersuites = mbedtls_ssl_conf_ciphersuites;
enum ssl_set_ciphersuites_for_version = mbedtls_ssl_conf_ciphersuites_for_version;
enum ssl_set_client_transport_id = mbedtls_ssl_set_client_transport_id;
enum ssl_set_curves = mbedtls_ssl_conf_curves;
enum ssl_set_dbg = mbedtls_ssl_conf_dbg;
enum ssl_set_dh_param = mbedtls_ssl_conf_dh_param;
enum ssl_set_dh_param_ctx = mbedtls_ssl_conf_dh_param_ctx;
enum ssl_set_dtls_anti_replay = mbedtls_ssl_conf_dtls_anti_replay;
enum ssl_set_dtls_badmac_limit = mbedtls_ssl_conf_dtls_badmac_limit;
enum ssl_set_dtls_cookies = mbedtls_ssl_conf_dtls_cookies;
enum ssl_set_encrypt_then_mac = mbedtls_ssl_conf_encrypt_then_mac;
enum ssl_set_endpoint = mbedtls_ssl_conf_endpoint;
enum ssl_set_extended_master_secret = mbedtls_ssl_conf_extended_master_secret;
enum ssl_set_fallback = mbedtls_ssl_conf_fallback;
enum ssl_set_handshake_timeout = mbedtls_ssl_conf_handshake_timeout;
enum ssl_set_hostname = mbedtls_ssl_set_hostname;
enum ssl_set_max_frag_len = mbedtls_ssl_conf_max_frag_len;
enum ssl_set_max_version = mbedtls_ssl_conf_max_version;
enum ssl_set_min_version = mbedtls_ssl_conf_min_version;
enum ssl_set_own_cert = mbedtls_ssl_conf_own_cert;
enum ssl_set_psk = mbedtls_ssl_conf_psk;
enum ssl_set_psk_cb = mbedtls_ssl_conf_psk_cb;
enum ssl_set_renegotiation = mbedtls_ssl_conf_renegotiation;
enum ssl_set_renegotiation_enforced = mbedtls_ssl_conf_renegotiation_enforced;
enum ssl_set_renegotiation_period = mbedtls_ssl_conf_renegotiation_period;
enum ssl_set_rng = mbedtls_ssl_conf_rng;
enum ssl_set_session = mbedtls_ssl_set_session;
enum ssl_set_session_cache = mbedtls_ssl_conf_session_cache;
enum ssl_set_session_tickets = mbedtls_ssl_conf_session_tickets;
enum ssl_set_sni = mbedtls_ssl_conf_sni;
enum ssl_set_transport = mbedtls_ssl_conf_transport;
enum ssl_set_truncated_hmac = mbedtls_ssl_conf_truncated_hmac;
enum ssl_set_verify = mbedtls_ssl_conf_verify;
enum ssl_sig_from_pk = mbedtls_ssl_sig_from_pk;
enum ssl_states = mbedtls_ssl_states;
enum ssl_transform = mbedtls_ssl_transform;
enum ssl_transform_free = mbedtls_ssl_transform_free;
enum ssl_write = mbedtls_ssl_write;
enum ssl_write_certificate = mbedtls_ssl_write_certificate;
enum ssl_write_change_cipher_spec = mbedtls_ssl_write_change_cipher_spec;
enum ssl_write_finished = mbedtls_ssl_write_finished;
enum ssl_write_record = mbedtls_ssl_write_record;
enum ssl_write_version = mbedtls_ssl_write_version;
enum supported_ciphers = mbedtls_cipher_supported;
enum t_sint = mbedtls_mpi_sint;
enum t_udbl = mbedtls_t_udbl;
enum t_uint = mbedtls_mpi_uint;
enum test_ca_crt = mbedtls_test_ca_crt;
enum test_ca_crt_ec = mbedtls_test_ca_crt_ec;
enum test_ca_crt_rsa = mbedtls_test_ca_crt_rsa;
enum test_ca_key = mbedtls_test_ca_key;
enum test_ca_key_ec = mbedtls_test_ca_key_ec;
enum test_ca_key_rsa = mbedtls_test_ca_key_rsa;
enum test_ca_list = mbedtls_test_cas_pem;
enum test_ca_pwd = mbedtls_test_ca_pwd;
enum test_ca_pwd_ec = mbedtls_test_ca_pwd_ec;
enum test_ca_pwd_rsa = mbedtls_test_ca_pwd_rsa;
enum test_cli_crt = mbedtls_test_cli_crt;
enum test_cli_crt_ec = mbedtls_test_cli_crt_ec;
enum test_cli_crt_rsa = mbedtls_test_cli_crt_rsa;
enum test_cli_key = mbedtls_test_cli_key;
enum test_cli_key_ec = mbedtls_test_cli_key_ec;
enum test_cli_key_rsa = mbedtls_test_cli_key_rsa;
enum test_srv_crt = mbedtls_test_srv_crt;
enum test_srv_crt_ec = mbedtls_test_srv_crt_ec;
enum test_srv_crt_rsa = mbedtls_test_srv_crt_rsa;
enum test_srv_key = mbedtls_test_srv_key;
enum test_srv_key_ec = mbedtls_test_srv_key_ec;
enum test_srv_key_rsa = mbedtls_test_srv_key_rsa;
enum threading_mutex_t = mbedtls_threading_mutex_t;
enum threading_set_alt = mbedtls_threading_set_alt;
enum timing_self_test = mbedtls_timing_self_test;
enum version_check_feature = mbedtls_version_check_feature;
enum version_get_number = mbedtls_version_get_number;
enum version_get_string = mbedtls_version_get_string;
enum version_get_string_full = mbedtls_version_get_string_full;
enum x509_bitstring = mbedtls_x509_bitstring;
enum x509_buf = mbedtls_x509_buf;
enum x509_crl = mbedtls_x509_crl;
enum x509_crl_entry = mbedtls_x509_crl_entry;
enum x509_crl_free = mbedtls_x509_crl_free;
enum x509_crl_info = mbedtls_x509_crl_info;
enum x509_crl_init = mbedtls_x509_crl_init;
enum x509_crl_parse = mbedtls_x509_crl_parse;
enum x509_crl_parse_der = mbedtls_x509_crl_parse_der;
enum x509_crl_parse_file = mbedtls_x509_crl_parse_file;
enum x509_crt = mbedtls_x509_crt;
enum x509_crt_check_extended_key_usage = mbedtls_x509_crt_check_extended_key_usage;
enum x509_crt_check_key_usage = mbedtls_x509_crt_check_key_usage;
enum x509_crt_free = mbedtls_x509_crt_free;
enum x509_crt_info = mbedtls_x509_crt_info;
enum x509_crt_init = mbedtls_x509_crt_init;
enum x509_crt_parse = mbedtls_x509_crt_parse;
enum x509_crt_parse_der = mbedtls_x509_crt_parse_der;
enum x509_crt_parse_file = mbedtls_x509_crt_parse_file;
enum x509_crt_parse_path = mbedtls_x509_crt_parse_path;
enum x509_crt_revoked = mbedtls_x509_crt_is_revoked;
enum x509_crt_verify = mbedtls_x509_crt_verify;
enum x509_csr = mbedtls_x509_csr;
enum x509_csr_free = mbedtls_x509_csr_free;
enum x509_csr_info = mbedtls_x509_csr_info;
enum x509_csr_init = mbedtls_x509_csr_init;
enum x509_csr_parse = mbedtls_x509_csr_parse;
enum x509_csr_parse_der = mbedtls_x509_csr_parse_der;
enum x509_csr_parse_file = mbedtls_x509_csr_parse_file;
enum x509_dn_gets = mbedtls_x509_dn_gets;
enum x509_get_alg = mbedtls_x509_get_alg;
enum x509_get_alg_null = mbedtls_x509_get_alg_null;
enum x509_get_ext = mbedtls_x509_get_ext;
enum x509_get_name = mbedtls_x509_get_name;
enum x509_get_rsassa_pss_params = mbedtls_x509_get_rsassa_pss_params;
enum x509_get_serial = mbedtls_x509_get_serial;
enum x509_get_sig = mbedtls_x509_get_sig;
enum x509_get_sig_alg = mbedtls_x509_get_sig_alg;
enum x509_get_time = mbedtls_x509_get_time;
enum x509_key_size_helper = mbedtls_x509_key_size_helper;
enum x509_name = mbedtls_x509_name;
enum x509_self_test = mbedtls_x509_self_test;
enum x509_sequence = mbedtls_x509_sequence;
enum x509_serial_gets = mbedtls_x509_serial_gets;
enum x509_set_extension = mbedtls_x509_set_extension;
enum x509_sig_alg_gets = mbedtls_x509_sig_alg_gets;
enum x509_string_to_names = mbedtls_x509_string_to_names;
enum x509_time = mbedtls_x509_time;
enum x509_time_expired = mbedtls_x509_time_is_past;
enum x509_time_future = mbedtls_x509_time_is_future;
enum x509_write_extensions = mbedtls_x509_write_extensions;
enum x509_write_names = mbedtls_x509_write_names;
enum x509_write_sig = mbedtls_x509_write_sig;
enum x509write_cert = mbedtls_x509write_cert;
enum x509write_crt_der = mbedtls_x509write_crt_der;
enum x509write_crt_free = mbedtls_x509write_crt_free;
enum x509write_crt_init = mbedtls_x509write_crt_init;
enum x509write_crt_pem = mbedtls_x509write_crt_pem;
enum x509write_crt_set_authority_key_identifier = mbedtls_x509write_crt_set_authority_key_identifier;
enum x509write_crt_set_basic_constraints = mbedtls_x509write_crt_set_basic_constraints;
enum x509write_crt_set_extension = mbedtls_x509write_crt_set_extension;
enum x509write_crt_set_issuer_key = mbedtls_x509write_crt_set_issuer_key;
enum x509write_crt_set_issuer_name = mbedtls_x509write_crt_set_issuer_name;
enum x509write_crt_set_key_usage = mbedtls_x509write_crt_set_key_usage;
enum x509write_crt_set_md_alg = mbedtls_x509write_crt_set_md_alg;
enum x509write_crt_set_ns_cert_type = mbedtls_x509write_crt_set_ns_cert_type;
enum x509write_crt_set_serial = mbedtls_x509write_crt_set_serial;
enum x509write_crt_set_subject_key = mbedtls_x509write_crt_set_subject_key;
enum x509write_crt_set_subject_key_identifier = mbedtls_x509write_crt_set_subject_key_identifier;
enum x509write_crt_set_subject_name = mbedtls_x509write_crt_set_subject_name;
enum x509write_crt_set_validity = mbedtls_x509write_crt_set_validity;
enum x509write_crt_set_version = mbedtls_x509write_crt_set_version;
enum x509write_csr = mbedtls_x509write_csr;
enum x509write_csr_der = mbedtls_x509write_csr_der;
enum x509write_csr_free = mbedtls_x509write_csr_free;
enum x509write_csr_init = mbedtls_x509write_csr_init;
enum x509write_csr_pem = mbedtls_x509write_csr_pem;
enum x509write_csr_set_extension = mbedtls_x509write_csr_set_extension;
enum x509write_csr_set_key = mbedtls_x509write_csr_set_key;
enum x509write_csr_set_key_usage = mbedtls_x509write_csr_set_key_usage;
enum x509write_csr_set_md_alg = mbedtls_x509write_csr_set_md_alg;
enum x509write_csr_set_ns_cert_type = mbedtls_x509write_csr_set_ns_cert_type;
enum x509write_csr_set_subject_name = mbedtls_x509write_csr_set_subject_name;
enum xtea_context = mbedtls_xtea_context;
enum xtea_crypt_cbc = mbedtls_xtea_crypt_cbc;
enum xtea_crypt_ecb = mbedtls_xtea_crypt_ecb;
enum xtea_free = mbedtls_xtea_free;
enum xtea_init = mbedtls_xtea_init;
enum xtea_self_test = mbedtls_xtea_self_test;
enum xtea_setup = mbedtls_xtea_setup;

/* compat-1.3.h */
/* MBEDTLS_DEPRECATED_REMOVED */
+/
